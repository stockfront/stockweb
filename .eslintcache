[{"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\index.js":"1","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js":"2","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"3","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\layouts\\Main.js":"4","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\BackgroundColorContext.js":"5","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\ThemeContext.js":"6","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\routes.js":"7","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js":"8","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\Sidebar\\Sidebar.js":"9","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\NewsMemo.js":"10","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js":"11","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js":"12","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js":"13","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\News.js":"14","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\Reference.js":"15","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats2.js":"16","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js":"17","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\Manage.js":"18","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsStore.js":"19","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsList.js":"20","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\StockNameList.js":"21","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\RefCard.js":"22","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\SetRefCard.js":"23","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js":"24","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\variables\\charts.js":"25","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\FetchData.js":"26","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsAddBtn.js":"27","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\ThemeList.js":"28","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Home\\WebMain.js":"29","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\community\\CommunityWrapper.js":"30","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Home\\HotTheme\\ThemeCharts.js":"31","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockInfo.js":"32","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockTab.js":"33","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockList.js":"34"},{"size":777,"mtime":1611246918064,"results":"35","hashOfConfig":"36"},{"size":536,"mtime":1611250575410,"results":"37","hashOfConfig":"36"},{"size":539,"mtime":1610810714373,"results":"38","hashOfConfig":"36"},{"size":1579,"mtime":1615878943774,"results":"39","hashOfConfig":"36"},{"size":318,"mtime":1610901610231,"results":"40","hashOfConfig":"36"},{"size":217,"mtime":1610810338666,"results":"41","hashOfConfig":"36"},{"size":1340,"mtime":1615892556840,"results":"42","hashOfConfig":"36"},{"size":3264,"mtime":1614081332166,"results":"43","hashOfConfig":"36"},{"size":1581,"mtime":1615892468704,"results":"44","hashOfConfig":"36"},{"size":459,"mtime":1614081615653,"results":"45","hashOfConfig":"36"},{"size":820,"mtime":1613989021717,"results":"46","hashOfConfig":"36"},{"size":1305,"mtime":1614080285123,"results":"47","hashOfConfig":"36"},{"size":828,"mtime":1613995330139,"results":"48","hashOfConfig":"36"},{"size":2402,"mtime":1614078882339,"results":"49","hashOfConfig":"36"},{"size":3307,"mtime":1613428690046,"results":"50","hashOfConfig":"36"},{"size":1690,"mtime":1614036822627,"results":"51","hashOfConfig":"36"},{"size":456,"mtime":1615882964547,"results":"52","hashOfConfig":"36"},{"size":1118,"mtime":1615878943778,"results":"53","hashOfConfig":"36"},{"size":3737,"mtime":1614082025356,"results":"54","hashOfConfig":"36"},{"size":1086,"mtime":1613304961692,"results":"55","hashOfConfig":"36"},{"size":1227,"mtime":1614078367068,"results":"56","hashOfConfig":"36"},{"size":982,"mtime":1613419556192,"results":"57","hashOfConfig":"36"},{"size":2329,"mtime":1613428753695,"results":"58","hashOfConfig":"36"},{"size":1718,"mtime":1615879417643,"results":"59","hashOfConfig":"36"},{"size":5279,"mtime":1615878943775,"results":"60","hashOfConfig":"36"},{"size":2803,"mtime":1615878943776,"results":"61","hashOfConfig":"36"},{"size":736,"mtime":1614325925874,"results":"62","hashOfConfig":"36"},{"size":4381,"mtime":1615878943779,"results":"63","hashOfConfig":"36"},{"size":3592,"mtime":1615885649610,"results":"64","hashOfConfig":"36"},{"size":149,"mtime":1615892189316,"results":"65","hashOfConfig":"36"},{"size":5910,"mtime":1615882677996,"results":"66","hashOfConfig":"36"},{"size":4719,"mtime":1615882194477,"results":"67","hashOfConfig":"36"},{"size":2695,"mtime":1615882306877,"results":"68","hashOfConfig":"36"},{"size":5150,"mtime":1615882202071,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"18bkgpe",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\index.js",[],["158","159"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n    const [theme, setTheme] = useState(themes.dark);\r\n\r\n    function changeTheme(theme) {\r\n        setTheme(theme)\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={\r\n            {\r\n                theme: theme.dark,\r\n                changeTheme: changeTheme\r\n            }}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\layouts\\Main.js",["161"],"import React from \"react\";\r\nimport { BackgroundColorContext } from \"../contexts/BackgroundColorContext\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport routes from '../routes';\r\nimport MemoPlugin from \"../components/MemoPlugin/MemoPlugin\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nfunction Main(props) {\r\n\r\n    const toggleSideBar = () => {\r\n        console.log(\"toggle 클릭!\")\r\n    }\r\n\r\n    const getRoute = (routes) => {\r\n        return (\r\n            routes.map((prop, key) => {\r\n                return(\r\n                <Route\r\n                    path={prop.layout + prop.path}\r\n                    component={prop.component}\r\n                    key={key}\r\n                />);\r\n            }));\r\n    }\r\n\r\n    return (\r\n        <BackgroundColorContext.Consumer>\r\n            {({ color, changeColor }) => (\r\n                <React.Fragment>\r\n                    <div className=\"wrapper\">\r\n                        <Sidebar\r\n                            routes={routes}\r\n                            toggleSideBar={toggleSideBar} />\r\n                        <div className=\"main-panel\">\r\n                            <Switch>\r\n                                {getRoute(routes)}\r\n                                <Redirect to=\"/main/stockinfo\"/>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                    <MemoPlugin/>\r\n                </React.Fragment>\r\n            )}\r\n        </BackgroundColorContext.Consumer>\r\n    );\r\n\r\n}\r\n\r\nexport default Main","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\BackgroundColorContext.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\ThemeContext.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\routes.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js",["162","163","164","165","166"],"import React, { useEffect, useState } from 'react';\r\nimport NewWindow from 'react-new-window';\r\nimport {StockMemo} from './StockMemo';\r\nimport {ThemeMemo} from './ThemeMemo';\r\nimport AddNewsBtn from './AddNewsBtn';\r\nimport NewsMemo from './NewsMemo';\r\n\r\nfunction MemoPlugin(props) {\r\n\r\n    \r\n    const [isWindowOpen, setIsWindowOpen] = useState(false)\r\n    const [data,setData] = useState([{\"stockmemo\":\"\",\"themememo\":\"\",\"reg_date\":\"\",\"newsmemo\":[{\"newslink\":\"\",\r\n            \"newstitle\":\"\"}]}]\r\n    )\r\n\r\n    const [page,setPage] = useState(0)\r\n\r\n    const windowOpenHandler = () => {\r\n        setIsWindowOpen(!isWindowOpen)\r\n    }\r\n\r\n    //최초 한번 실행되도록, 일별로 memo insert 해주는것\r\n    useEffect(()=>{      \r\n        fetch(\"http://localhost:8080/getmemo?index=-1\",{method:\"GET\"})\r\n    },[]) \r\n\r\n    useEffect(()=>{\r\n\r\n        let url = new URL(\"http://localhost:8080/getmemo\")\r\n        url.search = new URLSearchParams({\"index\":page}).toString()\r\n       \r\n        fetch(url,{method:\"GET\"})\r\n        .then(res => res.json()) \r\n        .then(result => { \r\n            console.log(result)\r\n            setData(result);\r\n        })        \r\n\r\n    },[isWindowOpen,page])\r\n\r\n    const indexHandler = (e) => {\r\n\r\n        let page_index = parseInt(e.target.innerHTML.replace(\" \",\"\")-1)\r\n        if(page_index == 3 || page_index == 4 ) {return}\r\n        setPage(page_index)\r\n    }\r\n\r\n    const AddNewsHandler = () =>{\r\n\r\n    }\r\n\r\n    const getPagination = () => { \r\n\r\n            let tag=[];\r\n\r\n            for(let i=1; i<=5; i++)\r\n            {\r\n                tag.push(<button key={i} onClick={indexHandler}>{i}</button>)\r\n            } \r\n            return tag\r\n        }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"news-Flugin\">\r\n    \r\n                    <button onClick={windowOpenHandler}> <i className=\"far fa-newspaper fa-2x\"></i></button>\r\n\r\n                    {isWindowOpen &&\r\n                        (<NewWindow features={{ \"titlebar\": \"no\", \"toolbar\": \"no\" }}\r\n                            onUnload={windowOpenHandler}>\r\n                            <div className=\"memo_wrapper\">\r\n                            <div className=\"memo_header\"><h2>{data[0].reg_date}</h2></div>\r\n                                <fieldset>\r\n                                    <legend>메모장</legend>\r\n                                    <StockMemo memo={data[0].stockmemo} date={data[0].reg_date}/>                        \r\n                                </fieldset>                          \r\n                                <fieldset>\r\n                                    <legend>뉴스</legend>\r\n                                    <NewsMemo news={data[0].newsmemo}/>\r\n                                    {/* <AddNewsBtn/> */}\r\n                                    {/* <button onClick={()=>{\r\n                                        alert(\"실행!\")\r\n                                    }}>추가</button> */}\r\n                                </fieldset>\r\n                           <div className=\"memo_footer\">\r\n                               {getPagination()}\r\n                           </div>\r\n                           </div>\r\n                        </NewWindow>)}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoPlugin;\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\Sidebar\\Sidebar.js",["167","168","169"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\NewsMemo.js",["170","171"],"import React, { useState } from 'react';\r\n\r\nfunction NewsMemo(props){\r\n\r\n\r\n    const getList = (data) => (\r\n\r\n        data.map((value,idx)=>{\r\n            return(\r\n                <p><a key={value.newstitle} href={value.newslink} target=\"_blank\">{value.newstitle}</a></p>\r\n            )\r\n        })\r\n\r\n    )\r\n\r\n    console.log(props.news)\r\n\r\n    return(\r\n        <div>\r\n        {getList(props.news)}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default NewsMemo;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\News.js",["172"],"import React, { useState } from \"react\";\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport StockNameList from './StockNameList';\r\nimport NewsList from './NewsList';\r\nimport {NewsStore} from './NewsStore';\r\n\r\nfunction News(props) {\r\n\r\n    const [stockName,setStockName] = useState(\"\");\r\n\r\n    const [selectedList,setSelectedList] = useState([]);\r\n\r\n    const [day, setDay] = useState(() => {\r\n        let today = new Date();\r\n\r\n        let year = today.getFullYear()\r\n        let month = today.getMonth() + 1\r\n        month = month >= 10 ? month : '0' + month\r\n        let day = today.getDate()\r\n        day = day >= 10 ? day : '0' + day\r\n\r\n        return (year + \"-\" + month + \"-\" + day)\r\n    })\r\n\r\n    const stockNameHandler = (e) => {\r\n       setStockName(e.target.childNodes[0].data)\r\n    }\r\n\r\n    const addListHandler = (e) => {\r\n\r\n        let targetTag =  e.target.parentNode.childNodes[0]\r\n\r\n        let body = { \r\n            \"stockName\": stockName ,\r\n            \"newsTitle\": targetTag.text,\r\n            \"newsLink\": targetTag.href,\r\n            \"selectedDay\": day}\r\n\r\n        fetch(\"http://localhost:8080/newslistadd\", { \r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type':'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body)})\r\n            .then(() => {setSelectedList(body)}) //DB 데이터 저장\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"content news-board\">\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <Col sm={{ size: 6}}>\r\n                    \r\n                    </Col>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>       \r\n                <Col sm=\"3\">\r\n                    \r\n                    <Card>\r\n                        <StockNameList stockNameHandler={stockNameHandler} day={day}/>\r\n                    </Card>\r\n\r\n                </Col>\r\n              \r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsList stockName = {stockName} addListHandler = {addListHandler} day={day}/>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsStore selectedList={selectedList}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div >\r\n\r\n\r\n    );\r\n}\r\n\r\nexport { News };\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\Reference.js",["173","174","175"],"import React, { useEffect, useState } from 'react'\r\nimport { RefCard } from './RefCard'\r\nimport {SetRefCard} from './SetRefCard'\r\nimport {\r\n    Row, Col, Card, CardHeader, CardBody, CardFooter\r\n} from 'reactstrap'\r\nimport Masonry from 'react-masonry-css'\r\n\r\n\r\nfunction Reference(props) {\r\n\r\n    const [nation, setNation] = useState(\"미국\")\r\n    const [cardData, setCardData] = useState([])\r\n    const [prevData, setPrevData] = useState([])\r\n    const[modal,setModal] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/geturl\")\r\n        url.search = new URLSearchParams({ \"nation\": nation })\r\n\r\n        fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(result => { setCardData(result); })\r\n\r\n    }, [nation])\r\n\r\n    const breakpointColumnsObj = {\r\n        default: 3,\r\n        1600: 2,\r\n        1300: 1\r\n    };\r\n\r\n    const toggle = () => {setModal(!modal)}\r\n\r\n    const getNationURL = (cardData) => {\r\n        \r\n        return (\r\n            cardData.map((value, idx) => {\r\n                return (\r\n                    <RefCard key={value.category + nation + idx} cardData={value} removeCard={removeCard}/>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const changeNation = (e) => {\r\n\r\n        setNation(e.target.innerHTML)\r\n\r\n    }\r\n\r\n    const addCard = () => {\r\n\r\n        toggle()\r\n\r\n        setPrevData([])\r\n    }\r\n\r\n    const removeCard = () => {\r\n\r\n        let value = window.confirm(\"\")\r\n\r\n        if(value) {\r\n            // fetch 삭제\r\n        }\r\n        else {\r\n            // fetch 삭제 x\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Row>\r\n                <Col sm=\"9\">\r\n                    <Card className=\"ref_wrapper\">\r\n                        <CardHeader>\r\n                            <span>\r\n                                <button className={nation == \"미국\" ? \"ref_click\" : \"\"} onClick={changeNation}>미국</button>\r\n                                <button className={nation == \"한국\" ? \"ref_click\" : \"\"} onClick={changeNation}>한국</button>\r\n                                <button className={nation == \"일본\" ? \"ref_click\" : \"\"} onClick={changeNation}>일본</button>\r\n                            </span>\r\n                        </CardHeader>\r\n                        <br></br>\r\n                        <CardBody className=\"ref_body\">\r\n                            <Masonry\r\n                                breakpointCols={breakpointColumnsObj}\r\n                                className=\"my-masonry-grid\"\r\n                                columnClassName=\"my-masonry-grid_column\"\r\n                            >\r\n                                {getNationURL(cardData)}\r\n                            </Masonry>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <div className=\"ref_plus\" onClick={addCard}>\r\n                                +\r\n                                </div>\r\n                        </CardFooter>\r\n                        <SetRefCard modal={modal} toggle={toggle} \r\n                        nation ={nation} prevData={prevData}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport { Reference };\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats2.js",["176","177","178"],"import { Modal } from \"reactstrap\";\r\nimport React, { useState } from \"react\";\r\nimport NewWindow from 'react-new-window';\r\n\r\nexport function Stats2() {\r\n\r\n    const [day, setDay] = useState(\"\");\r\n    const [isWindowOpen, SetIsWindowOpen] = useState(false);\r\n\r\n    const windowOpenHandler = () => {\r\n        SetIsWindowOpen(!isWindowOpen)\r\n    }\r\n\r\n    const sendText = (e) => {\r\n\r\n        console.log(e)\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <button onClick={windowOpenHandler}>Click</button>\r\n            {isWindowOpen &&\r\n                (<NewWindow features={{ \"titlebar\": \"no\", \"toolbar\": \"no\" }}\r\n                    onUnload={windowOpenHandler}>\r\n\r\n                    <form onSubmit={sendText}>\r\n                        <fieldset>\r\n                            <legend>종목명</legend>\r\n                            <textarea></textarea>\r\n                            <span>\r\n                                <button>수정</button>\r\n                                <input type=\"submit\" value=\"저장\"/>\r\n                            </span>\r\n                        </fieldset>\r\n                    </form>\r\n                    <form onSubmit={sendText}>\r\n                        <fieldset>\r\n                            <legend>테마명</legend>\r\n                            <textarea></textarea>\r\n                            <span>\r\n                                <button>수정</button>\r\n                                <input type=\"submit\" value=\"저장\"/>\r\n                            </span>\r\n                        </fieldset>\r\n                    </form>\r\n                </NewWindow>)}\r\n        </div>\r\n    );\r\n}\r\n",["179","180"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js",["181"],"import React, { useState } from \"react\";\r\nimport {DailyVolume} from './DailyVolume';\r\n// import {ThemeChart} from '../../StockInfo/HotTheme/ThemeCharts'\r\nimport {   \r\n    Row,\r\n    Col  \r\n} from \"reactstrap\";\r\n\r\n\r\n\r\n\r\nexport function Stats1(){\r\n    return (\r\n        <div className=\"content\">\r\n              <Row>\r\n                <Col sm=\"5\">\r\n                    <DailyVolume/>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\Manage.js",["182","183","184"],"import React,{useState} from \"react\";\r\nimport {Button,Row,Col,Card,CardHeader,CardBody} from \"reactstrap\";\r\nimport {Get,GetTheme} from './FetchData';\r\nimport search_icon from './search_magnifying_glass_icon_149392.png';\r\n\r\nexport function Manage(){\r\nconst[stockName,setStockName] = useState(); \r\nconst[input,setInput] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n                <Card>\r\n                    <CardHeader>\r\n\r\n                    \r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <input className='search_icon' id=\"stockName\" type=\"text\"/>\r\n                        <input type=\"image\" src={search_icon} width='25' height='25'\r\n                        onClick={() => {setStockName(document.getElementById('stockName').value);}}/>\r\n                                <Get stockName={stockName} input={input}/>\r\n                    </CardBody>\r\n                </Card>\r\n    \r\n                <Row>\r\n                     <Col>\r\n                        <GetTheme/>\r\n                    </Col>\r\n                </Row>\r\n                    \r\n        </div>\r\n    );\r\n}","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsStore.js",["185","186","187","188","189","190"],"import React, { useEffect, useState } from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink, Table } from 'reactstrap';\r\nimport checkIcon from './iconmonstr-plus-thin-16.png';\r\nimport removeIcon from './iconmonstr-minus-thin-16.png';\r\n\r\nimport NewsAddBtn from './NewsAddBtn';\r\n\r\n\r\nfunction NewsStore(props) {\r\n\r\n\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData(result)\r\n        })\r\n\r\n    },[props.selectedList])\r\n\r\n    const tabAddHandler = (e) => {       \r\n        \r\n        let body = {\r\n            \"stockName\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[0].innerHTML,\r\n            \"newsTitle\" :  e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text,\r\n            \"newsLink\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].href\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/tabAddStoredNews\",\r\n        {\r\n        method:'POST',\r\n        headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n        body:JSON.stringify(body)\r\n        }).then(res => res.json())\r\n        .then(result => {alert(result)})\r\n\r\n    }\r\n    \r\n    const memoAddHandler = (e) => {\r\n\r\n        let body = {\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text,\r\n            \"newsLink\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].href,\r\n            \"day\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].innerHTML\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/memoAddStoredNews\",\r\n        {\r\n        method:'POST',\r\n        headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n        body:JSON.stringify(body)\r\n        }).then(res => res.json())\r\n        .then(result => alert(result))\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n     \r\n        let body = {\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text\r\n        }\r\n        \r\n        fetch(\"http://localhost:8080/deletestorednews\",\r\n        {   method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n            body:JSON.stringify(body)\r\n        }).then(() => {\r\n            fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const getList = (data) => {\r\n        return (\r\n            data.map((value,idx) => (                \r\n                <tr key={idx}>\r\n                <td className=\"testcolor\">{value['stockName']}</td>\r\n                <td><a href={value['newsLink']} target=\"_blank\">{value['newsTitle']}</a></td>\r\n                <td>{value['reg_date']}</td>\r\n                <td><NewsAddBtn tabAddHandler={tabAddHandler} memoAddHandler={memoAddHandler}/></td>\r\n                <td><div onClick={deleteHandler}><img src={removeIcon}/></div></td>\r\n            </tr>\r\n            )) \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-wrapper\">\r\n             <Table className =\"stored-news\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>분류</th>\r\n                        <th>뉴스</th>\r\n                        <th>일자</th>                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getList(data)}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { NewsStore };","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsList.js",["191","192"],"import React, { useEffect, useState } from 'react';\r\nimport { CardHeader } from 'reactstrap';\r\n\r\nfunction NewsList(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/newslist\")\r\n        url.search = new URLSearchParams({ \"selectedDay\": props.day, \"filterValue\": props.stockName }).toString();\r\n        \r\n        fetch(url, { method:\"GET\" })\r\n            .then(res => res.json())\r\n            .then(result => {setData(result)})\r\n    }, [props.stockName])\r\n\r\n    const getLists = (value) => {\r\n\r\n        return (value.map((value,idx)=>(\r\n            <li className=\"news\" key={idx}><a href={value['newsLink']} target=\"_blank\">{value['newsTitle']}</a><button onClick={props.addListHandler}>추가</button></li>\r\n    )));\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-wrapper news-list\">\r\n            <CardHeader><span>{props.stockName}</span></CardHeader>\r\n            <ul className=\"stock-news\">\r\n                {getLists(data)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsList;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\StockNameList.js",["193","194","195","196"],"import React, { useEffect, useState } from 'react';\r\nimport { ListGroup, ListGroupItem, Badge, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nfunction StockNameList(props) {\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/newsstocks\")\r\n\r\n        url.search = new URLSearchParams({ \"selectedDay\": props.day }).toString()\r\n\r\n        fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result == \"\") { }\r\n                else {\r\n                    setData(result)\r\n                }\r\n            })\r\n    }, [props.day])\r\n\r\n    const getList = (value) => {\r\n        return (value.map((value, idx) => (\r\n            <ListGroupItem className=\"name-list\" tabIndex=\"1\" key={idx} onClick={props.stockNameHandler}>{value['filterValue']}<Badge>{value['valueNumber']}</Badge></ListGroupItem>\r\n        )))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"news-wrapper\">\r\n            <div className=\"stock-curday\">{props.day}</div>\r\n            <ListGroup>\r\n                {getList(data)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockNameList;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\RefCard.js",["197","198"],"import React, { useState } from 'react'\r\n\r\nfunction RefCard(props) {\r\n\r\n    const [data, setData] = useState(props.cardData[\"urlData\"]);\r\n\r\n    const getList = (data) => {        \r\n        return (\r\n            data.map((value, idx) => {\r\n               \r\n                return (\r\n                 <li key={value.urlTitle} >\r\n                     <a href={value.urlLink} target=\"_blank\"><strong>{value.urlTitle}</strong></a>\r\n                     <div>{value.urlExplain}</div>\r\n                 </li>   \r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"ref_card\">\r\n            <button className=\"ref_card_removeBtn\" onClick={props.removeCard}>삭제</button>\r\n            <div className=\"ref_card_header\">{props.cardData.category}</div>\r\n            <div className=\"ref_card_body\">\r\n                <ul>\r\n                    {getList(data)}\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { RefCard };","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\SetRefCard.js",["199","200"],"import { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap'\r\nimport React, { useState } from 'react'\r\n\r\nfunction SetRefCard(props) {\r\n\r\n    const getList = (data) => {\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Category <input /></label>\r\n                {data.map((value, idx) => {\r\n                    return (\r\n                        <ul>\r\n                            <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                            <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                            <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                        </ul>\r\n                    )\r\n                })}\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(\r\n            {                \r\n                \"preUrlData\": props.prevData,\r\n                \"changeUrlData\": e\r\n            }\r\n        )\r\n\r\n        \r\n        \r\n        e.preventDefault()\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={props.modal} >\r\n            <ModalHeader toggle={props.toggle}></ModalHeader>\r\n            <ModalBody>\r\n                <span>Category : 커뮤니티</span>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n              \r\n                    <ul>\r\n                        <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                        <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                        <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                    </ul>\r\n                  \r\n                   \r\n                    <ul>\r\n                        <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                        <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                        <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                    </ul>\r\n                   \r\n\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <span><button>저장</button>\r\n                    <button>취소</button></span>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport { SetRefCard }","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js",["201"],"import React, { useEffect, useState } from 'react'\r\nimport {Card,CardHeader,CardBody,\r\n        Table} from 'reactstrap'\r\n\r\nfunction DailyVolume(props){\r\n\r\n    const [data,SetData] = useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n        // fetch(\"http://localhost:8080/getdailyvolume\",{method:\"GET\"})\r\n        // .then(res => res.json())\r\n        // .then(result => {console.log(data); SetData(result)})\r\n\r\n    },[])\r\n\r\n    const getList = (data) =>{\r\n        return (\r\n            data.map((value,idx)=>{\r\n\r\n                return(\r\n                <tr key={idx}>\r\n                    <td>{value.stockName}</td>\r\n                    <td>{value.volume}</td>\r\n                    <td>{value.avg_volume}</td>\r\n                    <td>{value.times}</td>\r\n                </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className=\"stats_wrapper\">\r\n        <CardHeader tag=\"h2\">거래량 급증</CardHeader>\r\n        <CardBody>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            종목명\r\n                        </th>\r\n                        <th>\r\n                            거래량\r\n                        </th>\r\n                        <th>\r\n                            평균 거래량\r\n                        </th>\r\n                        <th>\r\n                            거래량/평균거래량\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {getList(data)}                                   \r\n                </tbody>\r\n            </Table>\r\n        </CardBody>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport {DailyVolume};","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\variables\\charts.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\FetchData.js",["202","203","204","205","206","207"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {GetList,EditTheme} from './ThemeList'\r\nimport insert_icon from './add_insert_plus_icon_149546.png'\r\n\r\nfunction Get(props){\r\n    const [data, setData] = useState([]);\r\n    const [item,setItem] = useState([]);\r\n    const [isCancel,setisCancel] = useState(false);\r\n\r\n    let tmp = [];\r\n    console.log(\"get : \"+props.stockName)\r\n    \r\n    useEffect(() => {\r\n    const fetchData = async() => {\r\n        let url = new URL('http://localhost:8080/get')\r\n        url.search = new URLSearchParams({\"stockName\" : props.stockName})\r\n        \r\n        const response = await axios.get(url);\r\n        setData(response.data);\r\n      } \r\n      fetchData();\r\n\r\n    },[props.stockName]);\r\n \r\n    function dataDel(idx){\r\n      console.log(data[idx]);\r\n      let temp = {\r\n        \"stockName\" : props.stockName,\r\n        ...data[idx]\r\n      }\r\n      axios.post('http://localhost:8080/del',temp);\r\n      setData(data.filter((x => x!==data[idx])));\r\n    }\r\n\r\n    function post(data){\r\n     \r\n      axios.post('http://localhost:8080/post',data);\r\n    }\r\n\r\n    function cancel(idx){\r\n      data[idx].종목명 = data[idx].종목명+\" \";\r\n      setisCancel(!isCancel)\r\n    }\r\n\r\n    const insert = () =>{\r\n      let tmp = {\r\n        \"themeName\" : \"\",\r\n        \"content\" : \"\",\r\n      };\r\n      setData(data.concat(tmp));\r\n    }\r\n    \r\n    return(\r\n      <div>\r\n      <ul className='data-size'>\r\n        {data.map( (data,i) => \r\n        <GetList cancel={cancel} stockName={props.stockName}\r\n         post={post} key={data.themeName} idx={i} del={dataDel}  data={data}/> ) }\r\n      </ul>\r\n      <button onClick={insert}>\r\n      <img src={insert_icon} width='25' height='25'/>\r\n      </button>\r\n      </div>\r\n    );\r\n\r\n    \r\n}\r\n\r\n\r\nfunction GetTheme(props){\r\n  const [data, setData] = useState([]);\r\n  const [cnt,setCnt] = useState(0);\r\n\r\n  const insert = () =>{\r\n    let tmp = [\"#insert data\"];\r\n    setData(data.concat(tmp));\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetch(\"http://localhost:8080/themename\")\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setData(\r\n          result.map(value => (value['themeName']))\r\n        )\r\n      }) \r\n    },[])\r\n  \r\n  return(\r\n    <div>\r\n      <button onClick={insert}>\r\n        <img src={insert_icon} width='25' height='25'/>\r\n      </button>\r\n      {console.log(cnt),\r\n        data.map( (val,i) => \r\n        <div key={val}>\r\n          {val.split('#').map((data2,idx) => data2 ? \r\n          <span>\r\n             <EditTheme count={cnt} setCount={setCnt} \r\n             key={data2} setData={setData} data={data} idx={i} splitTheme={data2} splitIdx={idx}/>  \r\n          </span>\r\n          : \"\")\r\n          }\r\n        </div> \r\n      ) }\r\n     </div>     \r\n  )\r\n\r\n}\r\n\r\n\r\nexport {Get,GetTheme};\r\n\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsAddBtn.js",["208","209","210"],"import React, { useState } from 'react';\r\nimport checkIcon from './iconmonstr-plus-thin-16.png';\r\n\r\nfunction NewsAdd(props) {\r\n\r\n    const [isShow, SetIsShow] = useState(false)\r\n\r\n    const mouseEnterHandler = () => {\r\n        SetIsShow(true)\r\n    }\r\n\r\n    const mouseLeaveHandler = () => {\r\n        SetIsShow(false)\r\n    }\r\n\r\n    return (\r\n        <div onMouseLeave={mouseLeaveHandler}>\r\n            <span onMouseEnter={mouseEnterHandler}><img src={checkIcon} /></span>\r\n            <p className={isShow ? \"newsAddBtn newsShow\" : \"newsAddBtn\"}>\r\n                <a onClick={props.tabAddHandler}>Stock</a>\r\n                <a onClick={props.memoAddHandler}>Memo</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsAdd;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\ThemeList.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import { property, result, values } from 'lodash';\r\nimport React,{useState,useEffect} from 'react';\r\nimport { Card,CardHeader,CardBody } from 'reactstrap';\r\nimport {Post,Delete} from './FetchData';\r\nimport remove_icon from './trash_delete_remove_icon_149363.png'\r\nimport close_icon from './close_delete_remove_cross_icon_149504.png'\r\nimport edit_icon from './edit_modify_icon-icons.com_49882.ico'\r\nimport accept_icon from './check_accept_done_tick_icon_143633.png'\r\n\r\nfunction GetList(props){\r\n    let date = new Date();\r\n    const [isAble,setIsAble] = useState(true);\r\n\r\n    function toggle(){\r\n        setIsAble(false);   \r\n    }\r\n\r\n    function edit(e){\r\n        //console.log(\"asdf\")\r\n        // console.log(date.getMonth()+1)\r\n        let _date = date.getFullYear()+\"-\"+date.getMonth()+1+\"-\"+date.getDate();\r\n        let tmp = {\r\n            \"stockName\" : props.stockName,\r\n            \"themeName\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].value.replace(\" \",\"\"),\r\n            \"content\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].value,\r\n            //\"reg_date\" : date\r\n        }\r\n        props.post(tmp);\r\n    }\r\n\r\n    return(      \r\n        \r\n     <Card>\r\n        <CardHeader className=\"plugin-cardHeader\">\r\n        <input type='text' defaultValue={props.data.themeName} disabled = {isAble}/>\r\n         <span>\r\n            <button onClick={toggle}>\r\n            <img src={edit_icon} width='25' height='25'/>\r\n            </button>\r\n            <button onClick={() => {props.del(props.idx);}}>\r\n            <img src={remove_icon} width='25' height='25'/>\r\n            </button>\r\n            <button onClick={(e) => {edit(e);setIsAble(true)}}>\r\n            <img src={accept_icon} width='25' height='25'/>\r\n            </button>\r\n            <button onClick={() => {props.cancel(props.idx); setIsAble(true) }}>\r\n            <img src={close_icon} width='25' height='25'/>\r\n            </button>\r\n        </span>\r\n        </CardHeader>\r\n     <div className=\"plugin-cardbody\">\r\n        <textarea type=\"text-color\" className=\"text-color\" defaultValue={props.data.content} disabled = {isAble}/> \r\n    </div>\r\n    </Card>\r\n    \r\n\r\n       \r\n    )\r\n\r\n}\r\n\r\nfunction EditTheme(props){\r\n    const [isAble,setIsAble] = useState(true);\r\n    const [target,setTarget] = useState(\"#\"+props.splitTheme);\r\n    \r\n    const onChange = (e) =>{\r\n        setTarget(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    function edit(e,idx,j){\r\n        if(e.target.value != props.splitTheme){\r\n            let tmp = []\r\n            tmp = props.data[idx].split(\"#\")\r\n            let result = []\r\n            for(let i=1; i<tmp.length; i++){\r\n                if(i==j && target==\"\") continue\r\n                else if(i ==j) result += e.target.value\r\n                else result += \"#\"+tmp[i]\r\n            }\r\n           \r\n            if(result.length == 0){\r\n                if(idx == 0){\r\n                    props.data.splice(idx+1)\r\n                    props.setData(props.data.splice(idx+1))\r\n                }\r\n                else{\r\n                    props.setData(props.data.slice(0,idx).concat(props.data.slice(idx+1)))\r\n                }\r\n            }\r\n            else{\r\n                props.setData(props.data.slice(0,idx).concat(result).concat(props.data.slice(idx+1)))         \r\n            }\r\n        }\r\n       \r\n      }\r\n\r\n      return(\r\n        <input className=\"input\" type='text' \r\n            onBlur={(e) => {edit(e,props.idx,props.splitIdx)}}  \r\n            onChange={onChange} value={target}/> \r\n      )\r\n    \r\n}\r\n\r\nexport {GetList,EditTheme};\r\n\r\n\r\n     \r\n// <li className ='data-form'>\r\n// <div className='list-show'>\r\n// <div className='list-show-header'>\r\n// <span className='text-color' > 테마명 : \r\n// <span>{props.data.themeName}</span>\r\n//  <span >\r\n//     <button onClick={toggle}>수정</button>\r\n//     <button onClick={() => {props.del(props.idx);}}>삭제</button>\r\n//     <button onClick={(e) => {edit(e)}}>저장</button>\r\n//     <button onClick={() => {props.cancel(props.idx); setIsAble(!isAble) }}>취소</button>\r\n// </span>\r\n// </span>\r\n// </div>\r\n// <div className='list-show-body'>\r\n// <span className='span-form'>\r\n// 테마내용 : <input type=\"text-color\"  defaultValue={props.data.content} disabled = {isAble}/> \r\n// </span>\r\n// </div>\r\n// </div>\r\n\r\n// </li>","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Home\\WebMain.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\community\\CommunityWrapper.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Home\\HotTheme\\ThemeCharts.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockInfo.js",["245","246","247"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockTab.js",["248"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockList.js",["249","250","251"],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"260","line":6,"column":35,"nodeType":"258","messageId":"259","endLine":6,"endColumn":46},{"ruleId":"256","severity":1,"message":"261","line":4,"column":9,"nodeType":"258","messageId":"259","endLine":4,"endColumn":18},{"ruleId":"256","severity":1,"message":"262","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":44,"column":23,"nodeType":"265","messageId":"266","endLine":44,"endColumn":25},{"ruleId":"263","severity":1,"message":"264","line":44,"column":42,"nodeType":"265","messageId":"266","endLine":44,"endColumn":44},{"ruleId":"256","severity":1,"message":"267","line":48,"column":11,"nodeType":"258","messageId":"259","endLine":48,"endColumn":25},{"ruleId":"256","severity":1,"message":"268","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":26},{"ruleId":"256","severity":1,"message":"269","line":5,"column":19,"nodeType":"258","messageId":"259","endLine":5,"endColumn":23},{"ruleId":"256","severity":1,"message":"260","line":5,"column":25,"nodeType":"258","messageId":"259","endLine":5,"endColumn":36},{"ruleId":"256","severity":1,"message":"270","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":10,"column":20,"nodeType":"273","endLine":10,"endColumn":83},{"ruleId":"256","severity":1,"message":"274","line":18,"column":17,"nodeType":"258","messageId":"259","endLine":18,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":80,"column":59,"nodeType":"265","messageId":"266","endLine":80,"endColumn":61},{"ruleId":"263","severity":1,"message":"264","line":81,"column":59,"nodeType":"265","messageId":"266","endLine":81,"endColumn":61},{"ruleId":"263","severity":1,"message":"264","line":82,"column":59,"nodeType":"265","messageId":"266","endLine":82,"endColumn":61},{"ruleId":"256","severity":1,"message":"275","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":15},{"ruleId":"256","severity":1,"message":"276","line":7,"column":12,"nodeType":"258","messageId":"259","endLine":7,"endColumn":15},{"ruleId":"256","severity":1,"message":"274","line":7,"column":17,"nodeType":"258","messageId":"259","endLine":7,"endColumn":23},{"ruleId":"252","replacedBy":"277"},{"ruleId":"254","replacedBy":"278"},{"ruleId":"256","severity":1,"message":"270","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"279","line":2,"column":9,"nodeType":"258","messageId":"259","endLine":2,"endColumn":15},{"ruleId":"256","severity":1,"message":"280","line":8,"column":13,"nodeType":"258","messageId":"259","endLine":8,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":19,"column":25,"nodeType":"273","endLine":20,"endColumn":102},{"ruleId":"256","severity":1,"message":"283","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":20},{"ruleId":"256","severity":1,"message":"284","line":2,"column":22,"nodeType":"258","messageId":"259","endLine":2,"endColumn":36},{"ruleId":"256","severity":1,"message":"285","line":2,"column":38,"nodeType":"258","messageId":"259","endLine":2,"endColumn":52},{"ruleId":"256","severity":1,"message":"286","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":84,"column":21,"nodeType":"273","endLine":84,"endColumn":65},{"ruleId":"281","severity":1,"message":"287","line":87,"column":50,"nodeType":"273","endLine":87,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":16,"column":8,"nodeType":"290","endLine":16,"endColumn":25,"suggestions":"291"},{"ruleId":"271","severity":1,"message":"272","line":21,"column":44,"nodeType":"273","endLine":21,"endColumn":88},{"ruleId":"256","severity":1,"message":"283","line":2,"column":43,"nodeType":"258","messageId":"259","endLine":2,"endColumn":53},{"ruleId":"256","severity":1,"message":"284","line":2,"column":55,"nodeType":"258","messageId":"259","endLine":2,"endColumn":69},{"ruleId":"256","severity":1,"message":"285","line":2,"column":71,"nodeType":"258","messageId":"259","endLine":2,"endColumn":85},{"ruleId":"263","severity":1,"message":"264","line":18,"column":28,"nodeType":"265","messageId":"266","endLine":18,"endColumn":30},{"ruleId":"256","severity":1,"message":"292","line":5,"column":18,"nodeType":"258","messageId":"259","endLine":5,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":13,"column":22,"nodeType":"273","endLine":13,"endColumn":62},{"ruleId":"256","severity":1,"message":"270","line":2,"column":17,"nodeType":"258","messageId":"259","endLine":2,"endColumn":25},{"ruleId":"256","severity":1,"message":"293","line":6,"column":11,"nodeType":"258","messageId":"259","endLine":6,"endColumn":18},{"ruleId":"256","severity":1,"message":"294","line":7,"column":17,"nodeType":"258","messageId":"259","endLine":7,"endColumn":24},{"ruleId":"256","severity":1,"message":"295","line":8,"column":12,"nodeType":"258","messageId":"259","endLine":8,"endColumn":16},{"ruleId":"256","severity":1,"message":"296","line":8,"column":17,"nodeType":"258","messageId":"259","endLine":8,"endColumn":24},{"ruleId":"256","severity":1,"message":"297","line":11,"column":9,"nodeType":"258","messageId":"259","endLine":11,"endColumn":12},{"ruleId":"281","severity":1,"message":"287","line":62,"column":7,"nodeType":"273","endLine":62,"endColumn":54},{"ruleId":"281","severity":1,"message":"287","line":93,"column":9,"nodeType":"273","endLine":93,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":95,"column":24,"nodeType":"300","messageId":"301","endLine":95,"endColumn":25},{"ruleId":"281","severity":1,"message":"287","line":18,"column":52,"nodeType":"273","endLine":18,"endColumn":75},{"ruleId":"302","severity":1,"message":"303","line":20,"column":17,"nodeType":"273","endLine":20,"endColumn":50},{"ruleId":"302","severity":1,"message":"303","line":21,"column":17,"nodeType":"273","endLine":21,"endColumn":51},{"ruleId":"256","severity":1,"message":"304","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":18},{"ruleId":"256","severity":1,"message":"305","line":1,"column":20,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"306","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":34},{"ruleId":"256","severity":1,"message":"257","line":2,"column":24,"nodeType":"258","messageId":"259","endLine":2,"endColumn":33},{"ruleId":"256","severity":1,"message":"307","line":3,"column":26,"nodeType":"258","messageId":"259","endLine":3,"endColumn":34},{"ruleId":"256","severity":1,"message":"308","line":4,"column":9,"nodeType":"258","messageId":"259","endLine":4,"endColumn":13},{"ruleId":"256","severity":1,"message":"309","line":4,"column":14,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"256","severity":1,"message":"310","line":21,"column":13,"nodeType":"258","messageId":"259","endLine":21,"endColumn":18},{"ruleId":"281","severity":1,"message":"287","line":38,"column":13,"nodeType":"273","endLine":38,"endColumn":58},{"ruleId":"281","severity":1,"message":"287","line":41,"column":13,"nodeType":"273","endLine":41,"endColumn":60},{"ruleId":"281","severity":1,"message":"287","line":44,"column":13,"nodeType":"273","endLine":44,"endColumn":60},{"ruleId":"281","severity":1,"message":"287","line":47,"column":13,"nodeType":"273","endLine":47,"endColumn":59},{"ruleId":"256","severity":1,"message":"311","line":63,"column":12,"nodeType":"258","messageId":"259","endLine":63,"endColumn":18},{"ruleId":"256","severity":1,"message":"312","line":63,"column":19,"nodeType":"258","messageId":"259","endLine":63,"endColumn":28},{"ruleId":"263","severity":1,"message":"313","line":72,"column":27,"nodeType":"265","messageId":"266","endLine":72,"endColumn":29},{"ruleId":"263","severity":1,"message":"264","line":77,"column":21,"nodeType":"265","messageId":"266","endLine":77,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":77,"column":34,"nodeType":"265","messageId":"266","endLine":77,"endColumn":36},{"ruleId":"263","severity":1,"message":"264","line":78,"column":27,"nodeType":"265","messageId":"266","endLine":78,"endColumn":29},{"ruleId":"263","severity":1,"message":"264","line":82,"column":30,"nodeType":"265","messageId":"266","endLine":82,"endColumn":32},{"ruleId":"263","severity":1,"message":"264","line":83,"column":24,"nodeType":"265","messageId":"266","endLine":83,"endColumn":26},{"ruleId":"256","severity":1,"message":"314","line":2,"column":9,"nodeType":"258","messageId":"259","endLine":2,"endColumn":13},{"ruleId":"256","severity":1,"message":"315","line":3,"column":34,"nodeType":"258","messageId":"259","endLine":3,"endColumn":39},{"ruleId":"256","severity":1,"message":"316","line":7,"column":20,"nodeType":"258","messageId":"259","endLine":7,"endColumn":30},{"ruleId":"263","severity":1,"message":"264","line":20,"column":27,"nodeType":"265","messageId":"266","endLine":20,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":32,"column":33,"nodeType":"319","messageId":"320","endLine":32,"endColumn":35},{"ruleId":"263","severity":1,"message":"264","line":34,"column":24,"nodeType":"265","messageId":"266","endLine":34,"endColumn":26},{"ruleId":"263","severity":1,"message":"313","line":69,"column":40,"nodeType":"265","messageId":"266","endLine":69,"endColumn":42},{"ruleId":"263","severity":1,"message":"313","line":109,"column":29,"nodeType":"265","messageId":"266","endLine":109,"endColumn":31},{"ruleId":"256","severity":1,"message":"321","line":110,"column":19,"nodeType":"258","messageId":"259","endLine":110,"endColumn":23},{"ruleId":"256","severity":1,"message":"322","line":111,"column":19,"nodeType":"258","messageId":"259","endLine":111,"endColumn":20},{"ruleId":"256","severity":1,"message":"323","line":112,"column":19,"nodeType":"258","messageId":"259","endLine":112,"endColumn":26},{"ruleId":"317","severity":1,"message":"318","line":119,"column":36,"nodeType":"319","messageId":"320","endLine":119,"endColumn":38},{"ruleId":"317","severity":1,"message":"318","line":123,"column":41,"nodeType":"319","messageId":"320","endLine":123,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":124,"column":49,"nodeType":"319","messageId":"320","endLine":124,"endColumn":51},{"ruleId":"256","severity":1,"message":"279","line":4,"column":5,"nodeType":"258","messageId":"259","endLine":4,"endColumn":11},{"ruleId":"256","severity":1,"message":"324","line":5,"column":5,"nodeType":"258","messageId":"259","endLine":5,"endColumn":16},{"ruleId":"256","severity":1,"message":"325","line":17,"column":5,"nodeType":"258","messageId":"259","endLine":17,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":68,"column":29,"nodeType":"273","endLine":68,"endColumn":72},{"ruleId":"256","severity":1,"message":"305","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":16},{"ruleId":"317","severity":1,"message":"326","line":37,"column":47,"nodeType":"319","messageId":"327","endLine":37,"endColumn":49},{"ruleId":"317","severity":1,"message":"326","line":105,"column":43,"nodeType":"319","messageId":"327","endLine":105,"endColumn":45},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'ThemeMemo' is defined but never used.","'AddNewsBtn' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AddNewsHandler' is assigned a value but never used.","'backgroundColors' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'setDay' is assigned a value but never used.","'Modal' is defined but never used.","'day' is assigned a value but never used.",["328"],["329"],"'Button' is defined but never used.","'setInput' is assigned a value but never used.","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'checkIcon' is defined but never used.","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.day'. Either include it or remove the dependency array.","ArrayExpression",["330"],"'setData' is assigned a value but never used.","'getList' is assigned a value but never used.","'SetData' is assigned a value but never used.","'item' is assigned a value but never used.","'setItem' is assigned a value but never used.","'tmp' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'property' is defined but never used.","'result' is defined but never used.","'values' is defined but never used.","'CardBody' is defined but never used.","'Post' is defined but never used.","'Delete' is defined but never used.","'_date' is assigned a value but never used.","'isAble' is assigned a value but never used.","'setIsAble' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Line' is defined but never used.","'Table' is defined but never used.","'setRawData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","'a' is assigned a value but never used.","'options' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'CardText' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},"Update the dependencies array to be: [props.day, props.stockName]",{"range":"333","text":"334"},[515,532],"[props.day, props.stockName]"]