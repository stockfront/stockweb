[{"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\index.js":"1","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js":"2","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"3","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\contexts\\BackgroundColorContext.js":"4","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\contexts\\ThemeContext.js":"5","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\layouts\\Main.js":"6","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\Sidebar\\Sidebar.js":"7","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\routes.js":"8","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\FixedPlugin.js":"9","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\variables\\charts.js":"10","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockInfo.js":"11","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\News.js":"12","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\StockNameList.js":"13","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\NewsList.js":"14","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockTab.js":"15","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockList.js":"16","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\NewsStore.js":"17","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\DataApi.js":"18","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\GetList.js":"19","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats2.js":"20","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Manage\\Manage.js":"21","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\Reference.js":"22","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\RefCard.js":"23","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\SetRefCard.js":"24","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js":"25","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js":"26","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js":"27","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js":"28","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js":"29","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js":"30","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\ThemeCharts.js":"31","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\index.js":"32","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\layouts\\Main.js":"33","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js":"34","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"35","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\routes.js":"36","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\BackgroundColorContext.js":"37","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\Sidebar\\Sidebar.js":"38","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\FixedPlugin.js":"39","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js":"40","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\ThemeContext.js":"41","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\DataApi.js":"42","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js":"43","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js":"44","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js":"45","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats2.js":"46","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\News.js":"47","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockInfo.js":"48","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\Reference.js":"49","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js":"50","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\Manage.js":"51","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\GetList.js":"52","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\StockNameList.js":"53","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsList.js":"54","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsStore.js":"55","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockTab.js":"56","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockList.js":"57","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\RefCard.js":"58","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js":"59","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\SetRefCard.js":"60","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\ThemeCharts.js":"61","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\variables\\charts.js":"62","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsAddBtn.js":"63","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\NewsMemo.js":"64","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\ThemeRate\\ThemeWrapper.js":"65","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\ThemeRate\\ThemeRow.js":"66"},{"size":777,"mtime":1611246918064,"results":"67","hashOfConfig":"68"},{"size":536,"mtime":1611250575410,"results":"69","hashOfConfig":"68"},{"size":539,"mtime":1610810714373,"results":"70","hashOfConfig":"68"},{"size":318,"mtime":1610901610231,"results":"71","hashOfConfig":"68"},{"size":217,"mtime":1610810338666,"results":"72","hashOfConfig":"68"},{"size":1706,"mtime":1613882848123,"results":"73","hashOfConfig":"68"},{"size":1461,"mtime":1611319942852,"results":"74","hashOfConfig":"68"},{"size":1071,"mtime":1613476118624,"results":"75","hashOfConfig":"68"},{"size":4748,"mtime":1614036777205,"results":"76","hashOfConfig":"68"},{"size":5270,"mtime":1611158512650,"results":"77","hashOfConfig":"68"},{"size":4932,"mtime":1612194813011,"results":"78","hashOfConfig":"68"},{"size":3182,"mtime":1613043379779,"results":"79","hashOfConfig":"68"},{"size":1227,"mtime":1613043457600,"results":"80","hashOfConfig":"68"},{"size":1086,"mtime":1613304961692,"results":"81","hashOfConfig":"68"},{"size":2695,"mtime":1612515872965,"results":"82","hashOfConfig":"68"},{"size":5173,"mtime":1613911552481,"results":"83","hashOfConfig":"68"},{"size":2942,"mtime":1613828385759,"results":"84","hashOfConfig":"68"},{"size":2731,"mtime":1614036777203,"results":"85","hashOfConfig":"68"},{"size":4250,"mtime":1614036777222,"results":"86","hashOfConfig":"68"},{"size":1690,"mtime":1614036822627,"results":"87","hashOfConfig":"68"},{"size":85,"mtime":1612451063313,"results":"88","hashOfConfig":"68"},{"size":3307,"mtime":1613428690046,"results":"89","hashOfConfig":"68"},{"size":982,"mtime":1613419556192,"results":"90","hashOfConfig":"68"},{"size":2329,"mtime":1613428753695,"results":"91","hashOfConfig":"68"},{"size":542,"mtime":1614036822608,"results":"92","hashOfConfig":"68"},{"size":1709,"mtime":1614036822592,"results":"93","hashOfConfig":"68"},{"size":3474,"mtime":1614035523526,"results":"94","hashOfConfig":"68"},{"size":820,"mtime":1613989021717,"results":"95","hashOfConfig":"68"},{"size":828,"mtime":1613995330139,"results":"96","hashOfConfig":"68"},{"size":1305,"mtime":1613896383196,"results":"97","hashOfConfig":"68"},{"size":1670,"mtime":1614036822625,"results":"98","hashOfConfig":"68"},{"size":777,"mtime":1611246918064,"results":"99","hashOfConfig":"100"},{"size":1706,"mtime":1613882848123,"results":"101","hashOfConfig":"100"},{"size":536,"mtime":1611250575410,"results":"102","hashOfConfig":"100"},{"size":539,"mtime":1610810714373,"results":"103","hashOfConfig":"100"},{"size":1252,"mtime":1614325573183,"results":"104","hashOfConfig":"100"},{"size":318,"mtime":1610901610231,"results":"105","hashOfConfig":"100"},{"size":1461,"mtime":1611319942852,"results":"106","hashOfConfig":"100"},{"size":4748,"mtime":1614036777205,"results":"107","hashOfConfig":"100"},{"size":3264,"mtime":1614081332166,"results":"108","hashOfConfig":"100"},{"size":217,"mtime":1610810338666,"results":"109","hashOfConfig":"100"},{"size":2680,"mtime":1614072319491,"results":"110","hashOfConfig":"100"},{"size":1305,"mtime":1614080285123,"results":"111","hashOfConfig":"100"},{"size":828,"mtime":1613995330139,"results":"112","hashOfConfig":"100"},{"size":820,"mtime":1613989021717,"results":"113","hashOfConfig":"100"},{"size":1690,"mtime":1614036822627,"results":"114","hashOfConfig":"100"},{"size":2402,"mtime":1614078882339,"results":"115","hashOfConfig":"100"},{"size":4719,"mtime":1614309888425,"results":"116","hashOfConfig":"100"},{"size":3307,"mtime":1613428690046,"results":"117","hashOfConfig":"100"},{"size":542,"mtime":1614036822608,"results":"118","hashOfConfig":"100"},{"size":85,"mtime":1612451063313,"results":"119","hashOfConfig":"100"},{"size":4250,"mtime":1614036777222,"results":"120","hashOfConfig":"100"},{"size":1227,"mtime":1614078367068,"results":"121","hashOfConfig":"100"},{"size":1086,"mtime":1613304961692,"results":"122","hashOfConfig":"100"},{"size":3737,"mtime":1614082025356,"results":"123","hashOfConfig":"100"},{"size":2695,"mtime":1612515872965,"results":"124","hashOfConfig":"100"},{"size":5150,"mtime":1614083274328,"results":"125","hashOfConfig":"100"},{"size":982,"mtime":1613419556192,"results":"126","hashOfConfig":"100"},{"size":1709,"mtime":1614036822592,"results":"127","hashOfConfig":"100"},{"size":2329,"mtime":1613428753695,"results":"128","hashOfConfig":"100"},{"size":1670,"mtime":1614036822625,"results":"129","hashOfConfig":"100"},{"size":5279,"mtime":1614955689079,"results":"130","hashOfConfig":"100"},{"size":736,"mtime":1614325925874,"results":"131","hashOfConfig":"100"},{"size":459,"mtime":1614081615653,"results":"132","hashOfConfig":"100"},{"size":449,"mtime":1615482193538,"results":"133","hashOfConfig":"100"},{"size":1285,"mtime":1615482192323,"results":"134","hashOfConfig":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"1okjeua",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"137"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"137"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"137"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"137"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"137"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"137"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"137"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"137"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"137"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"18bkgpe",{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"214"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"214"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"214"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"214"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"214"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"214"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"214"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"214"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"214"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"214"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"214"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"214"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"214"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"214"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"214"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"214"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"214"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"214"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"214"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\index.js",[],["297","298"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js",["299"],"import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n    const [theme, setTheme] = useState(themes.dark);\r\n\r\n    function changeTheme(theme) {\r\n        setTheme(theme)\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={\r\n            {\r\n                theme: theme.dark,\r\n                changeTheme: changeTheme\r\n            }}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\contexts\\BackgroundColorContext.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\contexts\\ThemeContext.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\layouts\\Main.js",["300"],"import React from \"react\";\r\nimport { BackgroundColorContext } from \"../contexts/BackgroundColorContext\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport routes from '../routes';\r\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\r\nimport MemoPlugin from \"../components/MemoPlugin/MemoPlugin\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nfunction Main(props) {\r\n\r\n    const toggleSideBar = () => {\r\n        console.log(\"toggle 클릭!\")\r\n    }\r\n\r\n    const getRoute = (routes) => {\r\n        return (\r\n            routes.map((prop, key) => {\r\n                return(\r\n                <Route\r\n                    path={prop.layout + prop.path}\r\n                    component={prop.component}\r\n                    key={key}\r\n                />);\r\n            }));\r\n    }\r\n\r\n    return (\r\n        <BackgroundColorContext.Consumer>\r\n            {({ color, changeColor }) => (\r\n                <React.Fragment>\r\n                    <div className=\"wrapper\">\r\n                        <Sidebar\r\n                            routes={routes}\r\n                            toggleSideBar={toggleSideBar} />\r\n                        <div className=\"main-panel\">\r\n                            <Switch>\r\n                                {getRoute(routes)}\r\n                                <Redirect to=\"/main/stockinfo\"/>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                    <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n                    <MemoPlugin/>\r\n                </React.Fragment>\r\n            )}\r\n        </BackgroundColorContext.Consumer>\r\n    );\r\n\r\n}\r\n\r\nexport default Main","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\Sidebar\\Sidebar.js",["301","302","303"],"import React from 'react';\r\n\r\nimport { backgroundColors, BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\r\n\r\nimport { NavLink, Link, useLocation } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const {routes,toggleSideBar} = props;\r\n\r\n\r\n    // const location = useLocation();\r\n\r\n    // const activeRoute = (routerName) => {\r\n\r\n    //     return routerName === location ? \"active\" : \"\";\r\n\r\n    // }\r\n\r\n    const getNav = (routes) => (\r\n        routes.map((prop, key) => {\r\n            // if(prop.redirect) return null;\r\n            console.log(\"what is redirect \" + prop.redirect);\r\n\r\n            return(\r\n                <li key={key}>\r\n                    <NavLink\r\n                        to={prop.layout + prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                        onClick= {toggleSideBar}\r\n                    >\r\n                        <p>{prop.name}</p>\r\n                    </NavLink>\r\n                </li>\r\n            );\r\n        }));\r\n\r\n\r\n\r\n    return (\r\n        <BackgroundColorContext.Consumer>\r\n            {({ color }) => (\r\n                <div className=\"sidebar\" data={color}>\r\n                    <Nav>\r\n                        {getNav(routes)}\r\n                    </Nav>\r\n                </div>\r\n\r\n            )}\r\n        </BackgroundColorContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\routes.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\FixedPlugin.js",["304","305","306","307","308","309","310"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\variables\\charts.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockInfo.js",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    Label,\r\n    FormGroup,\r\n    Input,\r\n    Table,\r\n    Row,\r\n    Col,\r\n    UncontrolledTooltip,\r\n    Toast,\r\n    ToastHeader,\r\n    ToastBody,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    CardText\r\n} from \"reactstrap\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { chartExample1 } from \"../../variables/charts\";\r\nimport {StockTable, ThemeTable} from \"./StockList\";\r\nimport { NewsTab } from \"./StockTab\";\r\nimport ThemeTab from \"./StockTab\";\r\n\r\nfunction StockInfo(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [stockName, setStockName] = useState(\"삼성전자\");\r\n\r\n    const toggle = (tab) => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    const stockNameHandler = (e) => {\r\n        setStockName(e.target.outerText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Row>\r\n                <Col sm=\"5\">\r\n                    <Card className=\"card-table\">\r\n                        <CardHeader tag=\"h2\">STOCK LIST</CardHeader>\r\n                        <CardBody>\r\n                            <StockTable stockNameHandler = {stockNameHandler} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col sm=\"5\">\r\n                    <Card className=\"card-table\">\r\n                        <CardHeader tag=\"h2\">THEMA LIST</CardHeader>\r\n                        <CardBody>\r\n                            <ThemeTable stockNameHandler = {stockNameHandler} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row>\r\n                <Col sm=\"7\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <CardTitle tag=\"h3\">{stockName}</CardTitle>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={activeTab === '1' ? \"active\" : \"\"}\r\n                                        onClick={() => { toggle('1'); }}\r\n                                    >\r\n                                        정보\r\n                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={activeTab === '2' ? \"active\" : \"\"}\r\n                                        onClick={() => { toggle('2'); }}\r\n                                    >\r\n                                        뉴스\r\n                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                          <ThemeTab stockName = {stockName}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                            <NewsTab stockName = {stockName} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"3\">\r\n                    <Row>\r\n                        <Card>\r\n                            <CardHeader>코스피 지수 실시간</CardHeader>\r\n                            <CardBody>\r\n                                <div className=\"chart-area\">\r\n                                    <Line\r\n                                        data={chartExample1[\"data1\"]}\r\n                                        options={chartExample1.options}>\r\n                                    </Line>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card>\r\n                            <CardHeader>코스닥 지수 실시간</CardHeader>\r\n                            <CardBody>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { StockInfo };\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\News.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    Label,\r\n    FormGroup,\r\n    Input,\r\n    Table,\r\n    Row,\r\n    Col,\r\n    UncontrolledTooltip,\r\n    Toast,\r\n    ToastHeader,\r\n    ToastBody,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    CardText,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Badge,\r\n    Container\r\n} from \"reactstrap\";\r\n\r\nimport StockNameList from './StockNameList';\r\nimport NewsList from './NewsList';\r\nimport {NewsStore} from './NewsStore';\r\n\r\nfunction News(props) {\r\n\r\n    const [stockName,setStockName] = useState(\"\");\r\n\r\n    const [selectedList,setSelectedList] = useState([]);\r\n\r\n    const [day, setDay] = useState(() => {\r\n        let today = new Date();\r\n\r\n        let year = today.getFullYear()\r\n        let month = today.getMonth() + 1\r\n        month = month >= 10 ? month : '0' + month\r\n        let day = today.getDate()\r\n        day = day >= 10 ? day : '0' + day\r\n\r\n        return (year + \"-\" + month + \"-\" + day)\r\n    })\r\n\r\n    const stockNameHandler = (e) => {\r\n       setStockName(e.target.childNodes[0].data)\r\n    }\r\n\r\n    const addListHandler = (e) => {\r\n\r\n        let targetTag =  e.target.parentNode.childNodes[0]\r\n\r\n        let body = { \r\n            \"stockName\": stockName ,\r\n            \"newsTitle\": targetTag.text,\r\n            \"newsLink\": targetTag.href,\r\n            \"selectedDay\": \"2021-02-10\"}\r\n\r\n        fetch(\"http://localhost:8080/newslistadd\", { \r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type':'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body)})\r\n            .then(() => {setSelectedList(body)}) //DB 데이터 저장\r\n\r\n        \r\n    }\r\n\r\n    const moveNextDayHandler = (e) => {\r\n        alert(\"날짜 앞\")\r\n    }\r\n\r\n    const movePreviousDayHandler = (e) => {\r\n       alert(\"날짜 뒤\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"content news-board\">\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <Col sm={{ size: 6}}>\r\n                    \r\n                    </Col>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>       \r\n                <Col sm=\"3\">\r\n                    \r\n                    <Card>\r\n                        <StockNameList stockNameHandler={stockNameHandler} day={day} moveNextDayHandler={moveNextDayHandler}\r\n                        movePreviousDayHandler = {movePreviousDayHandler}/>\r\n                    </Card>\r\n\r\n                </Col>\r\n              \r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsList stockName = {stockName} addListHandler = {addListHandler} day={day}/>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsStore selectedList={selectedList}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div >\r\n\r\n\r\n    );\r\n}\r\n\r\nexport { News };\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\StockNameList.js",["357","358","359","360"],"import React, { useEffect, useState } from 'react';\r\nimport { ListGroup, ListGroupItem, Badge, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nfunction StockNameList(props) {\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/newsstocks\")\r\n\r\n        url.search = new URLSearchParams({ \"selectedDay\": props.day }).toString()\r\n\r\n        fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result == \"\") { }\r\n                else {\r\n                    setData(result)\r\n                }\r\n            })\r\n    }, [props.day])\r\n\r\n    const getList = (value) => {\r\n        return (value.map((value, idx) => (\r\n            <ListGroupItem className=\"name-list\" tabIndex=\"1\" key={idx} onClick={props.stockNameHandler}>{value['filterValue']}<Badge>{value['valueNumber']}</Badge></ListGroupItem>\r\n        )))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"news-wrapper\">\r\n            <div className=\"stock-curday\">{props.day}</div>\r\n            <ListGroup>\r\n                {getList(data)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockNameList;","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\NewsList.js",["361","362"],"import React, { useEffect, useState } from 'react';\r\nimport { CardHeader } from 'reactstrap';\r\n\r\nfunction NewsList(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/newslist\")\r\n        url.search = new URLSearchParams({ \"selectedDay\": props.day, \"filterValue\": props.stockName }).toString();\r\n        \r\n        fetch(url, { method:\"GET\" })\r\n            .then(res => res.json())\r\n            .then(result => {setData(result)})\r\n    }, [props.stockName])\r\n\r\n    const getLists = (value) => {\r\n\r\n        return (value.map((value,idx)=>(\r\n            <li className=\"news\" key={idx}><a href={value['newsLink']} target=\"_blank\">{value['newsTitle']}</a><button onClick={props.addListHandler}>추가</button></li>\r\n    )));\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-wrapper news-list\">\r\n            <CardHeader><span>{props.stockName}</span></CardHeader>\r\n            <ul className=\"stock-news\">\r\n                {getLists(data)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsList;","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockTab.js",["363"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Table } from 'reactstrap';\r\n\r\nfunction ThemeTab(props) {\r\n\r\n    const [tableTag, setTableTag] = useState(<tr></tr>)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL('http://localhost:8080/themetab');\r\n\r\n        url.search = new URLSearchParams({ 'stockName': props.stockName }).toString();\r\n\r\n        if (props.stockName !== \"\") {\r\n            fetch(url, { method: 'GET' })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    setTableTag(result.map((value, idx) => (<tr key={idx}>\r\n                        <td className=\"data-th\">{value['themeName']}</td>\r\n                        <td className=\"data-td\">{value['content']}</td>\r\n                        <td>{value['reg_date']}</td>\r\n                    </tr>)))\r\n                });\r\n        }\r\n\r\n    }, [props.stockName])\r\n\r\n\r\n    console.log(\"themetab 실행 \");\r\n\r\n    return (\r\n        <div className=\"Info-size2\">\r\n            <Table>\r\n                <thead className=\"themeTab-thead\">\r\n                    <tr>\r\n                        <th>테마</th>\r\n                        <th>내용</th>\r\n                        <th>등록 일자</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableTag}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NewsTab(props) {\r\n\r\n    const [tableTag, setTableTag] = useState(<tr></tr>);\r\n\r\n    useEffect(() => {\r\n\r\n        var url = new URL('http://localhost:8080/newstab');\r\n\r\n        url.search = new URLSearchParams({ 'stockName': props.stockName }).toString();\r\n\r\n        if (props.stockName !== \"\") {\r\n            fetch(url, { method: 'GET' })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    setTableTag(result.map((value, idx) => (\r\n                        <tr key={idx}>\r\n                        <td><a href={value['newLink']} target=\"_blank\">{value['newsTitle']}</a></td>\r\n                        <td>{value['reg_date']}</td>\r\n                    </tr>\r\n                    )))\r\n                });\r\n        }\r\n    }, [props.stockName])    \r\n\r\n    return (\r\n        <div className=\"Info-size2\">\r\n            <Table>\r\n                <thead className=\"newsTab-thead\">\r\n                    <tr>\r\n                        <th>뉴스</th>\r\n                        <th>등록 일자</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableTag}\r\n                </tbody>\r\n\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {NewsTab};\r\nexport default React.memo(ThemeTab)\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\StockInfo\\StockList.js",["364","365","366","367"],"import { result } from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table } from 'reactstrap';\r\n\r\nfunction StockTable(props) {\r\n\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [data, setData] = useState({data:[],lowerData:[]});\r\n    \r\n    useEffect(() => {\r\n\t\r\n\r\n        //let today = new Date()\r\n       // let year = today.getFullYear(); \r\n       // let mon = String(today.getMonth()+1).length <2 ? \"0\"+String(today.getMonth()+1) : String(today.getMonth()+1)\r\n        //let day = String(today.getDate()).length <2 ? \"0\"+String(today.getDate()) : String(today.getDate())\r\n        //let date = year+\"-\"+mon+\"-\"+day\r\n\r\n        fetch(\"http://localhost:8080/stockname?date=2021-02-19\t\")\r\n        .then(res => res.json())\r\n        .then(result => {\t\r\n            setData({\r\n                data: result,\r\n                lowerData: result.map(val => val['stockName'].toLowerCase())\r\n            })\r\n        })\r\n        \r\n    },[])\r\n\r\n    const keywordHandler = (e) => {\r\n        setKeyword(e.target.value.toLowerCase())\r\n    }\r\n\r\n\r\n    const filterMethod = (keyword) => {\r\n\r\n        return (data['data'].map((value, idx) => {\r\n            if (data['lowerData'][idx].indexOf(keyword) !== -1) {\r\n                return (\r\n                    <tr key={idx}>\r\n                        <td>{value['stockCode']}</td>\r\n                        <td className=\"nameTag\" onClick={props.stockNameHandler}>{value['stockName']}</td>\r\n                <td>{value['close']} ( <span className=\"angle\"></span> {value['rate']}%)</td>\r\n                    </tr>\r\n                );\r\n\r\n            }\r\n        }));\r\n    }\r\n\r\n    // stlye 바꾸는거랑 tag 다시생성해주는거 뭐가 속도 더 빠른지 비교\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"div_search_bar\">\r\n                <input className=\"search_bar\" type=\"text\" onChange={keywordHandler} />\r\n            </div>\r\n            <div className=\"Info-size\">\r\n                <Table>\r\n                    <thead className =\"stock_header\">\r\n                        <tr>\r\n                            <th>종목 코드</th>\r\n                            <th>종목명</th>\r\n                            <th>주가 <span style={{fontSize:\"0.5rem\"}}>(17시 09분 21초 기준)&nbsp;&nbsp;&nbsp;<i className=\"fas fa-redo\"></i></span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filterMethod(keyword)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction ThemeTable(props) {\r\n\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [data, setData] = useState({data : [], lowerData: []});\r\n\r\n    useEffect(() => {\r\n        let today = new Date()\r\n        let year = today.getFullYear(); \r\n        let mon = String(today.getMonth()+1).length <2 ? \"0\"+String(today.getMonth()+1) : String(today.getMonth()+1)\r\n        let day = String(today.getDate()).length <2 ? \"0\"+String(today.getDate()) : String(today.getDate())\r\n        let date = year+\"-\"+mon+\"-\"+day\r\n        \r\n        fetch(\"http://localhost:8080/getthemeinfo?date=2021-02-19\")\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData({\r\n                data : result,\r\n                lowerData : result.map(value => (value['themename'].toLowerCase()))\r\n            })\r\n        })       \r\n    },[])\r\n\r\n    const keywordHandler = (e) => {\r\n        setKeyword(e.target.value.toLowerCase())\r\n    }\r\n  \r\n    const filterMethod = (keyword) => {\r\n        return (\r\n            data['data'].map((value, idx) => {\r\n                if (data['lowerData'][idx].indexOf(keyword) !== -1) {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{value['themename']}</td>\r\n                            <td>\r\n                                {value['splitNames'].map((value, idx) => (\r\n                                    <span key={idx}><span className=\"nameTag\" onClick={props.stockNameHandler}>{value}</span>&emsp;</span>))}\r\n                            </td>\r\n                                <td>{value['rate']}</td>\r\n                        </tr>\r\n                    );\r\n\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"div_search_bar\">\r\n                <input className=\"search_bar\" type=\"text\" onChange={keywordHandler} />\r\n            </div>\r\n            <div className=\"Info-size\">\r\n                <Table>\r\n                    <thead className=\"theme_header\">\r\n                        <tr>\r\n                            <th>테마명</th>\r\n                            <th>종목명</th>\r\n                            <th>평균 변동률<span style={{fontSize:\"0.5rem\"}}> (전일 기준)</span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className= \"theme_body\">\r\n                        {filterMethod(keyword)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport { StockTable, ThemeTable };","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\News\\NewsStore.js",["368","369","370","371","372","373"],"import React, { useEffect, useState } from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink, Table } from 'reactstrap';\r\nimport checkIcon from './iconmonstr-plus-thin-16.png';\r\nimport removeIcon from './iconmonstr-minus-thin-16.png';\r\n\r\n\r\nfunction NewsStore(props) {\r\n\r\n\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData(result)\r\n        })\r\n\r\n    },[props.selectedList])\r\n\r\n    const addHandler = (e) => {       \r\n        \r\n        let body = {\r\n            \"stockName\" : e.target.parentNode.parentNode.parentNode.childNodes[0].innerHTML,\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text,\r\n            \"newsLink\" : e.target.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].href\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/addstorednews\",\r\n        {\r\n        method:'POST',\r\n        headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n        body:JSON.stringify(body)\r\n        }).then(res => res.json())\r\n        .then(result => {alert(result)})\r\n\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n     \r\n        let body = {\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text\r\n        }\r\n        \r\n        fetch(\"http://localhost:8080/deletestorednews\",\r\n        {   method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n            body:JSON.stringify(body)\r\n        }).then(() => {\r\n            fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const getList = (data) => {\r\n        return (\r\n            data.map((value,idx) => (                \r\n                <tr key={idx}>\r\n                <td className=\"testcolor\">{value['stockName']}</td>\r\n                <td><a href={value['newsLink']} target=\"_blank\">{value['newsTitle']}</a></td>\r\n                <td>{value['reg_date']}</td>\r\n                <td><div onClick={addHandler}><img src={checkIcon}/></div></td>\r\n                <td><div onClick={deleteHandler}><img src={removeIcon}/></div></td>\r\n            </tr>\r\n            )) \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-wrapper\">\r\n             <Table className =\"stored-news\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>분류</th>\r\n                        <th>뉴스</th>\r\n                        <th>일자</th>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getList(data)}               \r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { NewsStore };","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\DataApi.js",["374","375","376","377","378","379","380"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\FixedPlugin\\GetList.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats2.js",["401","402","403"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Manage\\Manage.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\Reference.js",["404","405","406"],"import React, { useEffect, useState } from 'react'\r\nimport { RefCard } from './RefCard'\r\nimport {SetRefCard} from './SetRefCard'\r\nimport {\r\n    Row, Col, Card, CardHeader, CardBody, CardFooter\r\n} from 'reactstrap'\r\nimport Masonry from 'react-masonry-css'\r\n\r\n\r\nfunction Reference(props) {\r\n\r\n    const [nation, setNation] = useState(\"미국\")\r\n    const [cardData, setCardData] = useState([])\r\n    const [prevData, setPrevData] = useState([])\r\n    const[modal,setModal] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let url = new URL(\"http://localhost:8080/geturl\")\r\n        url.search = new URLSearchParams({ \"nation\": nation })\r\n\r\n        fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(result => { setCardData(result); })\r\n\r\n    }, [nation])\r\n\r\n    const breakpointColumnsObj = {\r\n        default: 3,\r\n        1600: 2,\r\n        1300: 1\r\n    };\r\n\r\n    const toggle = () => {setModal(!modal)}\r\n\r\n    const getNationURL = (cardData) => {\r\n        \r\n        return (\r\n            cardData.map((value, idx) => {\r\n                return (\r\n                    <RefCard key={value.category + nation + idx} cardData={value} removeCard={removeCard}/>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const changeNation = (e) => {\r\n\r\n        setNation(e.target.innerHTML)\r\n\r\n    }\r\n\r\n    const addCard = () => {\r\n\r\n        toggle()\r\n\r\n        setPrevData([])\r\n    }\r\n\r\n    const removeCard = () => {\r\n\r\n        let value = window.confirm(\"\")\r\n\r\n        if(value) {\r\n            // fetch 삭제\r\n        }\r\n        else {\r\n            // fetch 삭제 x\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Row>\r\n                <Col sm=\"9\">\r\n                    <Card className=\"ref_wrapper\">\r\n                        <CardHeader>\r\n                            <span>\r\n                                <button className={nation == \"미국\" ? \"ref_click\" : \"\"} onClick={changeNation}>미국</button>\r\n                                <button className={nation == \"한국\" ? \"ref_click\" : \"\"} onClick={changeNation}>한국</button>\r\n                                <button className={nation == \"일본\" ? \"ref_click\" : \"\"} onClick={changeNation}>일본</button>\r\n                            </span>\r\n                        </CardHeader>\r\n                        <br></br>\r\n                        <CardBody className=\"ref_body\">\r\n                            <Masonry\r\n                                breakpointCols={breakpointColumnsObj}\r\n                                className=\"my-masonry-grid\"\r\n                                columnClassName=\"my-masonry-grid_column\"\r\n                            >\r\n                                {getNationURL(cardData)}\r\n                            </Masonry>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <div className=\"ref_plus\" onClick={addCard}>\r\n                                +\r\n                                </div>\r\n                        </CardFooter>\r\n                        <SetRefCard modal={modal} toggle={toggle} \r\n                        nation ={nation} prevData={prevData}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport { Reference };\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\RefCard.js",["407","408"],"import React, { useState } from 'react'\r\n\r\nfunction RefCard(props) {\r\n\r\n    const [data, setData] = useState(props.cardData[\"urlData\"]);\r\n\r\n    const getList = (data) => {        \r\n        return (\r\n            data.map((value, idx) => {\r\n               \r\n                return (\r\n                 <li key={value.urlTitle} >\r\n                     <a href={value.urlLink} target=\"_blank\"><strong>{value.urlTitle}</strong></a>\r\n                     <div>{value.urlExplain}</div>\r\n                 </li>   \r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"ref_card\">\r\n            <button className=\"ref_card_removeBtn\" onClick={props.removeCard}>삭제</button>\r\n            <div className=\"ref_card_header\">{props.cardData.category}</div>\r\n            <div className=\"ref_card_body\">\r\n                <ul>\r\n                    {getList(data)}\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { RefCard };","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Reference\\SetRefCard.js",["409","410"],"import { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap'\r\nimport React, { useState } from 'react'\r\n\r\nfunction SetRefCard(props) {\r\n\r\n    const getList = (data) => {\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Category <input /></label>\r\n                {data.map((value, idx) => {\r\n                    return (\r\n                        <ul>\r\n                            <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                            <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                            <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                        </ul>\r\n                    )\r\n                })}\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(\r\n            {                \r\n                \"preUrlData\": props.prevData,\r\n                \"changeUrlData\": e\r\n            }\r\n        )\r\n\r\n        \r\n        \r\n        e.preventDefault()\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={props.modal} >\r\n            <ModalHeader toggle={props.toggle}></ModalHeader>\r\n            <ModalBody>\r\n                <span>Category : 커뮤니티</span>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n              \r\n                    <ul>\r\n                        <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                        <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                        <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                    </ul>\r\n                  \r\n                   \r\n                    <ul>\r\n                        <li>UrlTitle <input type=\"text\" name=\"urlTitle\" /></li>\r\n                        <li>UrlLink <input type=\"text\" name=\"urlLink\" /></li>\r\n                        <li>UrlExplain <input type=\"text\" name=\"urlExplain\" /></li>\r\n                    </ul>\r\n                   \r\n\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <span><button>저장</button>\r\n                    <button>취소</button></span>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport { SetRefCard }","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js",["411","412"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js",["413"],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js",["414","415","416","417","418"],"import React, { useEffect, useState } from 'react';\r\nimport NewWindow from 'react-new-window';\r\nimport {StockMemo} from './StockMemo';\r\nimport {ThemeMemo} from './ThemeMemo';\r\nimport AddNewsBtn from './AddNewsBtn';\r\n\r\nfunction MemoPlugin(props) {\r\n\r\n    \r\n    const [isWindowOpen, setIsWindowOpen] = useState(false)\r\n    const [data,setData] = useState([{\"stockmemo\":\"\",\"themememo\":\"\",\"reg_date\":\"\"}]\r\n    )\r\n\r\n    const [page,setPage] = useState(0)\r\n\r\n    const windowOpenHandler = () => {\r\n        setIsWindowOpen(!isWindowOpen)\r\n    }\r\n\r\n    //최초 한번 실행되도록, 일별로 memo insert 해주는것\r\n    useEffect(()=>{      \r\n        fetch(\"http://localhost:8080/getmemo?index=-1\",{method:\"GET\"})\r\n    },[]) \r\n\r\n    useEffect(()=>{\r\n\r\n        let url = new URL(\"http://localhost:8080/getmemo\")\r\n        url.search = new URLSearchParams({\"index\":page}).toString()\r\n       \r\n        fetch(url,{method:\"GET\"})\r\n        .then(res => res.json()) \r\n        .then(result => {  \r\n            \r\n            setData(result);\r\n        })        \r\n\r\n    },[isWindowOpen,page])\r\n\r\n    const indexHandler = (e) => {\r\n\r\n        let page_index = parseInt(e.target.innerHTML.replace(\" \",\"\")-1)\r\n        if(page_index == 3 || page_index == 4 ) {return}\r\n        setPage(page_index)\r\n    }\r\n\r\n    const AddNewsHandler = () =>{\r\n\r\n    }\r\n\r\n    const getPagination = () => { \r\n\r\n            let tag=[];\r\n\r\n            for(let i=1; i<=5; i++)\r\n            {\r\n                tag.push(<button key={i} onClick={indexHandler}>{i}</button>)\r\n            } \r\n            return tag\r\n        }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"news-Flugin\">\r\n    \r\n                    <button onClick={windowOpenHandler}> <i className=\"far fa-newspaper fa-2x\"></i></button>\r\n\r\n                    {isWindowOpen &&\r\n                        (<NewWindow features={{ \"titlebar\": \"no\", \"toolbar\": \"no\" }}\r\n                            onUnload={windowOpenHandler}>\r\n                            <div className=\"memo_wrapper\">\r\n                            <div className=\"memo_header\"><h2>{data[0].reg_date}</h2></div>\r\n                                <fieldset>\r\n                                    <legend>메모장</legend>\r\n                                    <StockMemo memo={data[0].stockmemo} date={data[0].reg_date}/>                        \r\n                                </fieldset>\r\n                           \r\n                                {/* <fieldset>\r\n                                    <legend>테마 메모장</legend>\r\n                                    <ThemeMemo memo={data[0].themememo} date={data[0].reg_date}/>\r\n                                 \r\n                                </fieldset> */}\r\n                                <fieldset>\r\n                                    <legend>뉴스</legend>\r\n                                    <a href=\"www.naver.com\" target=\"_blank\">네이버 뉴스</a>\r\n                                    {/* <AddNewsBtn/> */}\r\n                                    <button onClick={()=>{\r\n                                        alert(\"실행!\")\r\n                                    }}>추가</button>\r\n                                </fieldset>\r\n                           <div className=\"memo_footer\">\r\n                               {getPagination()}\r\n                           </div>\r\n                           </div>\r\n                        </NewWindow>)}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoPlugin;\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js",[],"C:\\Users\\gkas1\\Desktop\\webStock\\project-stock\\src\\views\\Stats\\Stats1\\ThemeCharts.js",["419","420","421","422","423","424","425"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\index.js",[],["426","427"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\layouts\\Main.js",["428"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\BackgroundColor\\BackgroundColor.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\ThemeWrapper\\ThemeWrapper.js",["429"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\routes.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\BackgroundColorContext.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\Sidebar\\Sidebar.js",["430","431","432"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\FixedPlugin.js",["433","434","435","436","437","438","439"],"import React,{useEffect, useState} from \"react\";\r\n// reactstrap components\r\nimport { \r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Button,\r\n  Dropdown, \r\n  DropdownToggle, \r\n  Badge \r\n} from \"reactstrap\";\r\n\r\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\r\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\r\nimport {Get,GetTheme} from './DataApi';\r\nimport search_icon from './search_magnifying_glass_icon_149392.png';\r\n\r\nfunction FixedPlugin(props) {\r\n    const[dropDownIsOpen, setdropDownIsOpen] = React.useState(false);  \r\n    const handleClick = () => {\r\n      setdropDownIsOpen(!dropDownIsOpen);\r\n    };\r\n\r\n    const[modal1,setModal1] = useState(false);\r\n    const[modal2,setModal2] = useState(false);\r\n    const toggle1 = () => setModal1(!modal1);\r\n    const toggle2 = () => setModal2(!modal2);\r\n\r\n    const[edit,setEdit] = useState({});\r\n    const[input,setInput] = useState(false)\r\n    const[stockName,setStockName] = useState();  \r\n\r\n    const [cnt,setCnt] = useState(0);\r\n\r\n\r\n    const editList = (x) => {\r\n      setEdit({x});\r\n\r\n    };\r\n    \r\n    return (\r\n      <div className=\"fixed-plugin\">\r\n        <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\r\n          <DropdownToggle tag=\"div\">\r\n            <i className=\"fa fa-cog fa-2x\" />\r\n          </DropdownToggle>\r\n          <ul className=\"dropdown-menu show\">\r\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n            <li className=\"adjustments-line\">\r\n              <div className=\"badge-colors text-center\">\r\n                <Badge\r\n                  color=\"primary\"\r\n                  className={\r\n                    props.bgColor === backgroundColors.primary ? \"active\" : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    props.handleBgClick(backgroundColors.primary);\r\n                  }}\r\n                />{\" \"}\r\n                <Badge\r\n                  color=\"info\"\r\n                  className={\r\n                    props.bgColor === backgroundColors.blue ? \"active\" : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    props.handleBgClick(backgroundColors.blue);\r\n                  }}\r\n                />{\" \"}\r\n                <Badge\r\n                  color=\"success\"\r\n                  className={\r\n                    props.bgColor === backgroundColors.green ? \"active\" : \"\"\r\n                  }\r\n                  onClick={() => {\r\n                    props.handleBgClick(backgroundColors.green);\r\n                  }}\r\n                />{\" \"}\r\n              </div>\r\n            </li>\r\n            <li className=\"adjustments-line text-center color-change\">\r\n              <ThemeContext.Consumer>\r\n                {({ changeTheme }) => (\r\n                  < >\r\n                    <span className=\"color-label\">LIGHT MODE</span>{\" \"}\r\n                    <Badge\r\n                      className=\"light-badge mr-2\"\r\n                      onClick={() => changeTheme(themes.light)}\r\n                    />{\" \"}\r\n                    <Badge\r\n                      className=\"dark-badge ml-2\"\r\n                      onClick={() => changeTheme(themes.dark)}\r\n                    />{\" \"}\r\n                    <span className=\"color-label\">DARK MODE</span>{\" \"}\r\n                  </>\r\n                )}\r\n              </ThemeContext.Consumer>\r\n            </li>\r\n              <div className='edit-menu'>\r\n              <span>\r\n              <Button className='edit-button' color='danger' onClick={toggle1} > stock info</Button>\r\n              <Modal isOpen={modal1} toggle={toggle1} >\r\n                  <ModalHeader toggle={toggle1}>  \r\n                    <input className='search_icon' id=\"stockName\" type=\"text\"/>\r\n                    <input type=\"image\" src={search_icon} width='25' height='25' onClick={() => {setStockName(document.getElementById('stockName').value);}}/>\r\n                  </ModalHeader>\r\n                 \r\n                  <ModalBody className='card plugin-card modal-body'>\r\n                    <Get stockName={stockName} input={input}></Get>\r\n                    {console.log(\"start : \"+stockName)}\r\n                  </ModalBody>       \r\n              </Modal>\r\n\r\n              <Button className='edit-button' color='danger'onClick={toggle2} > theme info</Button>\r\n              <Modal isOpen={modal2} toggle={toggle2} >\r\n                  <ModalHeader toggle={toggle2}> test2</ModalHeader>\r\n                  <ModalBody>\r\n                    <GetTheme/>\r\n                  </ModalBody>\r\n              </Modal>\r\n               </span>\r\n              \r\n            \r\n              </div>\r\n          </ul>\r\n        </Dropdown>\r\n      </div>\r\n  );\r\n                }\r\n                \r\n  export default FixedPlugin;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\MemoPlugin.js",["440","441","442","443","444"],"import React, { useEffect, useState } from 'react';\r\nimport NewWindow from 'react-new-window';\r\nimport {StockMemo} from './StockMemo';\r\nimport {ThemeMemo} from './ThemeMemo';\r\nimport AddNewsBtn from './AddNewsBtn';\r\nimport NewsMemo from './NewsMemo';\r\n\r\nfunction MemoPlugin(props) {\r\n\r\n    \r\n    const [isWindowOpen, setIsWindowOpen] = useState(false)\r\n    const [data,setData] = useState([{\"stockmemo\":\"\",\"themememo\":\"\",\"reg_date\":\"\",\"newsmemo\":[{\"newslink\":\"\",\r\n            \"newstitle\":\"\"}]}]\r\n    )\r\n\r\n    const [page,setPage] = useState(0)\r\n\r\n    const windowOpenHandler = () => {\r\n        setIsWindowOpen(!isWindowOpen)\r\n    }\r\n\r\n    //최초 한번 실행되도록, 일별로 memo insert 해주는것\r\n    useEffect(()=>{      \r\n        fetch(\"http://localhost:8080/getmemo?index=-1\",{method:\"GET\"})\r\n    },[]) \r\n\r\n    useEffect(()=>{\r\n\r\n        let url = new URL(\"http://localhost:8080/getmemo\")\r\n        url.search = new URLSearchParams({\"index\":page}).toString()\r\n       \r\n        fetch(url,{method:\"GET\"})\r\n        .then(res => res.json()) \r\n        .then(result => { \r\n            console.log(result)\r\n            setData(result);\r\n        })        \r\n\r\n    },[isWindowOpen,page])\r\n\r\n    const indexHandler = (e) => {\r\n\r\n        let page_index = parseInt(e.target.innerHTML.replace(\" \",\"\")-1)\r\n        if(page_index == 3 || page_index == 4 ) {return}\r\n        setPage(page_index)\r\n    }\r\n\r\n    const AddNewsHandler = () =>{\r\n\r\n    }\r\n\r\n    const getPagination = () => { \r\n\r\n            let tag=[];\r\n\r\n            for(let i=1; i<=5; i++)\r\n            {\r\n                tag.push(<button key={i} onClick={indexHandler}>{i}</button>)\r\n            } \r\n            return tag\r\n        }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"news-Flugin\">\r\n    \r\n                    <button onClick={windowOpenHandler}> <i className=\"far fa-newspaper fa-2x\"></i></button>\r\n\r\n                    {isWindowOpen &&\r\n                        (<NewWindow features={{ \"titlebar\": \"no\", \"toolbar\": \"no\" }}\r\n                            onUnload={windowOpenHandler}>\r\n                            <div className=\"memo_wrapper\">\r\n                            <div className=\"memo_header\"><h2>{data[0].reg_date}</h2></div>\r\n                                <fieldset>\r\n                                    <legend>메모장</legend>\r\n                                    <StockMemo memo={data[0].stockmemo} date={data[0].reg_date}/>                        \r\n                                </fieldset>                          \r\n                                <fieldset>\r\n                                    <legend>뉴스</legend>\r\n                                    <NewsMemo news={data[0].newsmemo}/>\r\n                                    {/* <AddNewsBtn/> */}\r\n                                    {/* <button onClick={()=>{\r\n                                        alert(\"실행!\")\r\n                                    }}>추가</button> */}\r\n                                </fieldset>\r\n                           <div className=\"memo_footer\">\r\n                               {getPagination()}\r\n                           </div>\r\n                           </div>\r\n                        </NewWindow>)}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoPlugin;\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\contexts\\ThemeContext.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\DataApi.js",["445","446","447","448","449","450"],"import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport {GetList,EditTheme} from './GetList'\nimport insert_icon from './add_insert_plus_icon_149546.png'\n\nfunction Get(props){\n    const [data, setData] = useState([]);\n    const [item,setItem] = useState([]);\n    const [isCancel,setisCancel] = useState(false);\n\n    let tmp = [];\n    console.log(\"get : \"+props.stockName)\nuseEffect(() => {\n \n    const fetchData = async() => {\n        let url = new URL('http://localhost:8080/get')\n        url.search = new URLSearchParams({\"stockName\" : props.stockName})\n        \n        const response = await axios.get(url);\n        setData(response.data);\n      } \n      fetchData();\n\n    },[props.stockName]);\n \n    function dataDel(idx){\n      console.log(data[idx]);\n      let temp = {\n        \"stockName\" : props.stockName,\n        ...data[idx]\n      }\n      axios.post('http://localhost:8080/del',temp);\n      setData(data.filter((x => x!==data[idx])));\n    }\n\n    function post(data){\n     \n      axios.post('http://localhost:8080/post',data);\n    }\n\n    function cancel(idx){\n      data[idx].종목명 = data[idx].종목명+\" \";\n      setisCancel(!isCancel)\n    }\n\n    const insert = () =>{\n      let tmp = {\n        \"themeName\" : \"\",\n        \"content\" : \"\",\n      };\n      setData(data.concat(tmp));\n    }\n    \n    return(\n      <div>\n      <ul className='data-size'>\n        {data.map( (data,i) => \n        <GetList cancel={cancel} stockName={props.stockName}\n         post={post} key={data.themeName} idx={i} del={dataDel}  data={data}/> ) }\n      </ul>\n      <button onClick={insert}>\n      <img src={insert_icon} width='25' height='25'/>\n      </button>\n      </div>\n    );\n\n    \n}\n\n\nfunction GetTheme(props){\n  const [data, setData] = useState([]);\n  const [cnt,setCnt] = useState(0);\n\n  const insert = () =>{\n    let tmp = [\"#insert data\"];\n    setData(data.concat(tmp));\n  }\n\n  useEffect(() => {\n      fetch(\"http://localhost:8080/themename\")\n      .then(res => res.json())\n      .then(result => {\n        setData(\n          result.map(value => (value['themeName']))\n        )\n      }) \n    },[])\n  \n  return(\n    <div>\n      <button onClick={insert}>\n        <img src={insert_icon} width='25' height='25'/>\n      </button>\n      {console.log(cnt),\n        data.map( (val,i) => \n        <div key={val}>\n          {val.split('#').map((data2,idx) => data2 ? \n          <span>\n             <EditTheme count={cnt} setCount={setCnt} \n             key={data2} setData={setData} data={data} idx={i} splitTheme={data2} splitIdx={idx}/>  \n          </span>\n          : \"\")\n          }\n        </div> \n      ) }\n     </div>     \n  )\n\n}\n\n\nexport {Get,GetTheme};\n\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\AddNewsBtn.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\ThemeMemo.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\StockMemo.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats2.js",["451","452","453"],"import { Modal } from \"reactstrap\";\r\nimport React, { useState } from \"react\";\r\nimport NewWindow from 'react-new-window';\r\n\r\nexport function Stats2() {\r\n\r\n    const [day, setDay] = useState(\"\");\r\n    const [isWindowOpen, SetIsWindowOpen] = useState(false);\r\n\r\n    const windowOpenHandler = () => {\r\n        SetIsWindowOpen(!isWindowOpen)\r\n    }\r\n\r\n    const sendText = (e) => {\r\n\r\n        console.log(e)\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <button onClick={windowOpenHandler}>Click</button>\r\n            {isWindowOpen &&\r\n                (<NewWindow features={{ \"titlebar\": \"no\", \"toolbar\": \"no\" }}\r\n                    onUnload={windowOpenHandler}>\r\n\r\n                    <form onSubmit={sendText}>\r\n                        <fieldset>\r\n                            <legend>종목명</legend>\r\n                            <textarea></textarea>\r\n                            <span>\r\n                                <button>수정</button>\r\n                                <input type=\"submit\" value=\"저장\"/>\r\n                            </span>\r\n                        </fieldset>\r\n                    </form>\r\n                    <form onSubmit={sendText}>\r\n                        <fieldset>\r\n                            <legend>테마명</legend>\r\n                            <textarea></textarea>\r\n                            <span>\r\n                                <button>수정</button>\r\n                                <input type=\"submit\" value=\"저장\"/>\r\n                            </span>\r\n                        </fieldset>\r\n                    </form>\r\n                </NewWindow>)}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\News.js",["454"],"import React, { useState } from \"react\";\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport StockNameList from './StockNameList';\r\nimport NewsList from './NewsList';\r\nimport {NewsStore} from './NewsStore';\r\n\r\nfunction News(props) {\r\n\r\n    const [stockName,setStockName] = useState(\"\");\r\n\r\n    const [selectedList,setSelectedList] = useState([]);\r\n\r\n    const [day, setDay] = useState(() => {\r\n        let today = new Date();\r\n\r\n        let year = today.getFullYear()\r\n        let month = today.getMonth() + 1\r\n        month = month >= 10 ? month : '0' + month\r\n        let day = today.getDate()\r\n        day = day >= 10 ? day : '0' + day\r\n\r\n        return (year + \"-\" + month + \"-\" + day)\r\n    })\r\n\r\n    const stockNameHandler = (e) => {\r\n       setStockName(e.target.childNodes[0].data)\r\n    }\r\n\r\n    const addListHandler = (e) => {\r\n\r\n        let targetTag =  e.target.parentNode.childNodes[0]\r\n\r\n        let body = { \r\n            \"stockName\": stockName ,\r\n            \"newsTitle\": targetTag.text,\r\n            \"newsLink\": targetTag.href,\r\n            \"selectedDay\": day}\r\n\r\n        fetch(\"http://localhost:8080/newslistadd\", { \r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type':'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body)})\r\n            .then(() => {setSelectedList(body)}) //DB 데이터 저장\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"content news-board\">\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <Col sm={{ size: 6}}>\r\n                    \r\n                    </Col>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>       \r\n                <Col sm=\"3\">\r\n                    \r\n                    <Card>\r\n                        <StockNameList stockNameHandler={stockNameHandler} day={day}/>\r\n                    </Card>\r\n\r\n                </Col>\r\n              \r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsList stockName = {stockName} addListHandler = {addListHandler} day={day}/>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                    <Card>\r\n                        <NewsStore selectedList={selectedList}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div >\r\n\r\n\r\n    );\r\n}\r\n\r\nexport { News };\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockInfo.js",["455","456","457"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    CardText\r\n} from \"reactstrap\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { chartExample1 } from \"../../variables/charts\";\r\nimport { StockTable, ThemeTable } from \"./StockList\";\r\nimport { NewsTab } from \"./StockTab\";\r\nimport ThemeTab from \"./StockTab\";\r\n\r\nfunction StockInfo(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [stockName, setStockName] = useState(\"삼성전자\");\r\n\r\n    const toggle = (tab) => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    const stockNameHandler = (e) => {\r\n        setStockName(e.target.outerText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Row>\r\n                <Col sm=\"5\">\r\n                    <Card className=\"card-table\">\r\n                        <CardHeader tag=\"h2\">STOCK LIST</CardHeader>\r\n                        <CardBody>\r\n                            <StockTable stockNameHandler={stockNameHandler} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col sm=\"5\">\r\n                    <Card className=\"card-table\">\r\n                        <CardHeader tag=\"h2\">THEMA LIST</CardHeader>\r\n                        <CardBody>\r\n                            <ThemeTable stockNameHandler={stockNameHandler} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row>\r\n                <Col sm=\"7\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <CardTitle tag=\"h3\">{stockName}</CardTitle>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={activeTab === '1' ? \"active\" : \"\"}\r\n                                        onClick={() => { toggle('1'); }}\r\n                                    >\r\n                                        정보\r\n                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={activeTab === '2' ? \"active\" : \"\"}\r\n                                        onClick={() => { toggle('2'); }}\r\n                                    >\r\n                                        뉴스\r\n                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                            <ThemeTab stockName={stockName} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                            <NewsTab stockName={stockName} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"3\">\r\n                    <Row>\r\n                        <Card>\r\n                            <CardHeader>코스피 지수 실시간</CardHeader>\r\n                            <CardBody>\r\n                                <div className=\"chart-area\">\r\n                                    <Line\r\n                                        data={chartExample1[\"data1\"]}\r\n                                        options={chartExample1.options}>\r\n                                    </Line>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card>\r\n                            <CardHeader>코스닥 지수 실시간</CardHeader>\r\n                            <CardBody>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { StockInfo };\r\n\r\n\r\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\Reference.js",["458","459","460"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\Stats1.js",["461","462"],"import React, { useState } from \"react\";\r\nimport {DailyVolume} from './DailyVolume';\r\nimport {ThemeChart} from './ThemeCharts'\r\nimport {   \r\n    Row,\r\n    Col  \r\n} from \"reactstrap\";\r\n\r\n\r\n\r\n\r\nexport function Stats1(){\r\n    return (\r\n        <div className=\"content\">\r\n              <Row>\r\n                <Col sm=\"5\">\r\n                    <DailyVolume/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col sm=\"5\">\r\n                   \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    );\r\n}","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Manage\\Manage.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\FixedPlugin\\GetList.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482"],"import { property, result, values } from 'lodash';\nimport React,{useState,useEffect} from 'react';\nimport { Card,CardHeader,CardBody } from 'reactstrap';\nimport {Post,Delete} from './DataApi';\nimport remove_icon from './trash_delete_remove_icon_149363.png'\nimport close_icon from './close_delete_remove_cross_icon_149504.png'\nimport edit_icon from './edit_modify_icon-icons.com_49882.ico'\nimport accept_icon from './check_accept_done_tick_icon_143633.png'\n\nfunction GetList(props){\n    let date = new Date();\n    const [isAble,setIsAble] = useState(true);\n\n    function toggle(){\n        setIsAble(false);   \n    }\n\n    function edit(e){\n        //console.log(\"asdf\")\n        // console.log(date.getMonth()+1)\n        let _date = date.getFullYear()+\"-\"+date.getMonth()+1+\"-\"+date.getDate();\n        let tmp = {\n            \"stockName\" : props.stockName,\n            \"themeName\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].value.replace(\" \",\"\"),\n            \"content\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].value,\n            //\"reg_date\" : date\n        }\n        props.post(tmp);\n    }\n\n    return(      \n        \n     <Card>\n        <CardHeader className=\"plugin-cardHeader\">\n        <input type='text' defaultValue={props.data.themeName} disabled = {isAble}/>\n         <span>\n            <button onClick={toggle}>\n            <img src={edit_icon} width='25' height='25'/>\n            </button>\n            <button onClick={() => {props.del(props.idx);}}>\n            <img src={remove_icon} width='25' height='25'/>\n            </button>\n            <button onClick={(e) => {edit(e);setIsAble(true)}}>\n            <img src={accept_icon} width='25' height='25'/>\n            </button>\n            <button onClick={() => {props.cancel(props.idx); setIsAble(true) }}>\n            <img src={close_icon} width='25' height='25'/>\n            </button>\n        </span>\n        </CardHeader>\n     <div className=\"plugin-cardbody\">\n        <textarea type=\"text-color\" className=\"text-color\" defaultValue={props.data.content} disabled = {isAble}/> \n    </div>\n    </Card>\n    \n\n       \n    )\n\n}\n\nfunction EditTheme(props){\n    const [isAble,setIsAble] = useState(true);\n    const [target,setTarget] = useState(\"#\"+props.splitTheme);\n    \n    const onChange = (e) =>{\n        setTarget(e.target.value)\n        console.log(e.target.value)\n    }\n\n    function edit(e,idx,j){\n        if(e.target.value != props.splitTheme){\n            let tmp = []\n            tmp = props.data[idx].split(\"#\")\n            let result = []\n            for(let i=1; i<tmp.length; i++){\n                if(i==j && target==\"\") continue\n                else if(i ==j) result += e.target.value\n                else result += \"#\"+tmp[i]\n            }\n           \n            if(result.length == 0){\n                if(idx == 0){\n                    props.data.splice(idx+1)\n                    props.setData(props.data.splice(idx+1))\n                }\n                else{\n                    props.setData(props.data.slice(0,idx).concat(props.data.slice(idx+1)))\n                }\n            }\n            else{\n                props.setData(props.data.slice(0,idx).concat(result).concat(props.data.slice(idx+1)))         \n            }\n        }\n       \n      }\n\n      return(\n        <input className=\"input\" type='text' \n            onBlur={(e) => {edit(e,props.idx,props.splitIdx)}}  \n            onChange={onChange} value={target}/> \n      )\n    \n}\n\nexport {GetList,EditTheme};\n\n\n     \n// <li className ='data-form'>\n// <div className='list-show'>\n// <div className='list-show-header'>\n// <span className='text-color' > 테마명 : \n// <span>{props.data.themeName}</span>\n//  <span >\n//     <button onClick={toggle}>수정</button>\n//     <button onClick={() => {props.del(props.idx);}}>삭제</button>\n//     <button onClick={(e) => {edit(e)}}>저장</button>\n//     <button onClick={() => {props.cancel(props.idx); setIsAble(!isAble) }}>취소</button>\n// </span>\n// </span>\n// </div>\n// <div className='list-show-body'>\n// <span className='span-form'>\n// 테마내용 : <input type=\"text-color\"  defaultValue={props.data.content} disabled = {isAble}/> \n// </span>\n// </div>\n// </div>\n\n// </li>","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\StockNameList.js",["483","484","485","486"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsList.js",["487","488"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsStore.js",["489","490","491","492","493","494"],"import React, { useEffect, useState } from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink, Table } from 'reactstrap';\r\nimport checkIcon from './iconmonstr-plus-thin-16.png';\r\nimport removeIcon from './iconmonstr-minus-thin-16.png';\r\n\r\nimport NewsAddBtn from './NewsAddBtn';\r\n\r\n\r\nfunction NewsStore(props) {\r\n\r\n\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData(result)\r\n        })\r\n\r\n    },[props.selectedList])\r\n\r\n    const tabAddHandler = (e) => {       \r\n        \r\n        let body = {\r\n            \"stockName\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[0].innerHTML,\r\n            \"newsTitle\" :  e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text,\r\n            \"newsLink\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].href\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/tabAddStoredNews\",\r\n        {\r\n        method:'POST',\r\n        headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n        body:JSON.stringify(body)\r\n        }).then(res => res.json())\r\n        .then(result => {alert(result)})\r\n\r\n    }\r\n    \r\n    const memoAddHandler = (e) => {\r\n\r\n        let body = {\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text,\r\n            \"newsLink\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].href,\r\n            \"day\" : e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].innerHTML\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/memoAddStoredNews\",\r\n        {\r\n        method:'POST',\r\n        headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n        body:JSON.stringify(body)\r\n        }).then(res => res.json())\r\n        .then(result => alert(result))\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n     \r\n        let body = {\r\n            \"newsTitle\" : e.target.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].text\r\n        }\r\n        \r\n        fetch(\"http://localhost:8080/deletestorednews\",\r\n        {   method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json;charset=utf-8\"},\r\n            body:JSON.stringify(body)\r\n        }).then(() => {\r\n            fetch(\"http://localhost:8080/getstorednews\",{method:\"GET\"})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const getList = (data) => {\r\n        return (\r\n            data.map((value,idx) => (                \r\n                <tr key={idx}>\r\n                <td className=\"testcolor\">{value['stockName']}</td>\r\n                <td><a href={value['newsLink']} target=\"_blank\">{value['newsTitle']}</a></td>\r\n                <td>{value['reg_date']}</td>\r\n                <td><NewsAddBtn tabAddHandler={tabAddHandler} memoAddHandler={memoAddHandler}/></td>\r\n                <td><div onClick={deleteHandler}><img src={removeIcon}/></div></td>\r\n            </tr>\r\n            )) \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-wrapper\">\r\n             <Table className =\"stored-news\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>분류</th>\r\n                        <th>뉴스</th>\r\n                        <th>일자</th>                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getList(data)}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { NewsStore };","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockTab.js",["495"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\StockInfo\\StockList.js",["496","497","498"],"import { result } from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table } from 'reactstrap';\r\n\r\nfunction StockTable(props) {\r\n\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [data, setData] = useState({data:[],lowerData:[]});\r\n    \r\n    useEffect(() => {\r\n\t\r\n\r\n        let today = new Date()\r\n       let year = today.getFullYear(); \r\n       let mon = String(today.getMonth()+1).length <2 ? \"0\"+String(today.getMonth()+1) : String(today.getMonth()+1)\r\n        let day = String(today.getDate()).length <2 ? \"0\"+String(today.getDate()) : String(today.getDate())\r\n        let date = year+\"-\"+mon+\"-\"+day\r\n\r\n        fetch(\"http://localhost:8080/stockname?date=\"+date)\r\n        .then(res => res.json())\r\n        .then(result => {\t\r\n            setData({\r\n                data: result,\r\n                lowerData: result.map(val => val['stockName'].toLowerCase())\r\n            })\r\n        })\r\n        \r\n    },[])\r\n\r\n    const keywordHandler = (e) => {\r\n        setKeyword(e.target.value.toLowerCase())\r\n    }\r\n\r\n\r\n    const filterMethod = (keyword) => {\r\n\r\n        return (data['data'].map((value, idx) => {\r\n            if (data['lowerData'][idx].indexOf(keyword) !== -1) {\r\n                return (\r\n                    <tr key={idx}>\r\n                        <td>{value['stockCode']}</td>\r\n                        <td className=\"nameTag\" onClick={props.stockNameHandler}>{value['stockName']}</td>\r\n                <td>{value['close']} ( <span className=\"angle\"></span> {value['rate']}%)</td>\r\n                    </tr>\r\n                );\r\n\r\n            }\r\n        }));\r\n    }\r\n\r\n    // stlye 바꾸는거랑 tag 다시생성해주는거 뭐가 속도 더 빠른지 비교\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"div_search_bar\">\r\n                <input className=\"search_bar\" type=\"text\" onChange={keywordHandler} />\r\n            </div>\r\n            <div className=\"Info-size\">\r\n                <Table>\r\n                    <thead className =\"stock_header\">\r\n                        <tr>\r\n                            <th>종목 코드</th>\r\n                            <th>종목명</th>\r\n                            <th>주가 <span style={{fontSize:\"0.5rem\"}}>(17시 09분 21초 기준)&nbsp;&nbsp;&nbsp;<i className=\"fas fa-redo\"></i></span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filterMethod(keyword)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction ThemeTable(props) {\r\n\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [data, setData] = useState({data : [], lowerData: []});\r\n\r\n    useEffect(() => {\r\n        let today = new Date()\r\n        let year = today.getFullYear(); \r\n        let mon = String(today.getMonth()+1).length <2 ? \"0\"+String(today.getMonth()+1) : String(today.getMonth()+1)\r\n        let day = String(today.getDate()).length <2 ? \"0\"+String(today.getDate()) : String(today.getDate())\r\n        let date = year+\"-\"+mon+\"-\"+day\r\n        \r\n        fetch(\"http://localhost:8080/getthemeinfo?date=\"+date)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData({\r\n                data : result,\r\n                lowerData : result.map(value => (value['themename'].toLowerCase()))\r\n            })\r\n        })       \r\n    },[])\r\n\r\n    const keywordHandler = (e) => {\r\n        setKeyword(e.target.value.toLowerCase())\r\n    }\r\n  \r\n    const filterMethod = (keyword) => {\r\n        return (\r\n            data['data'].map((value, idx) => {\r\n                if (data['lowerData'][idx].indexOf(keyword) !== -1) {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{value['themename']}</td>\r\n                            <td>\r\n                                {value['splitNames'].map((value, idx) => (\r\n                                    <span key={idx}><span className=\"nameTag\" onClick={props.stockNameHandler}>{value}</span>&emsp;</span>))}\r\n                            </td>\r\n                                <td>{value['rate']}</td>\r\n                        </tr>\r\n                    );\r\n\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"div_search_bar\">\r\n                <input className=\"search_bar\" type=\"text\" onChange={keywordHandler} />\r\n            </div>\r\n            <div className=\"Info-size\">\r\n                <Table>\r\n                    <thead className=\"theme_header\">\r\n                        <tr>\r\n                            <th>테마명</th>\r\n                            <th>종목명</th>\r\n                            <th>평균 변동률<span style={{fontSize:\"0.5rem\"}}> (전일 기준)</span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className= \"theme_body\">\r\n                        {filterMethod(keyword)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport { StockTable, ThemeTable };","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\RefCard.js",["499","500"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\DailyVolume.js",["501"],"import React, { useEffect, useState } from 'react'\r\nimport {Card,CardHeader,CardBody,\r\n        Table} from 'reactstrap'\r\n\r\nfunction DailyVolume(props){\r\n\r\n    const [data,SetData] = useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n        fetch(\"http://localhost:8080/getdailyvolume\",{method:\"GET\"})\r\n        .then(res => res.json())\r\n        .then(result => {console.log(data); SetData(result)})\r\n\r\n    },[])\r\n\r\n    const getList = (data) =>{\r\n        return (\r\n            data.map((value,idx)=>{\r\n\r\n                return(\r\n                <tr key={idx}>\r\n                    <td>{value.stockName}</td>\r\n                    <td>{value.volume}</td>\r\n                    <td>{value.avg_volume}</td>\r\n                    <td>{value.times}</td>\r\n                </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className=\"stats_wrapper\">\r\n        <CardHeader tag=\"h2\">거래량 급증</CardHeader>\r\n        <CardBody>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            종목명\r\n                        </th>\r\n                        <th>\r\n                            거래량\r\n                        </th>\r\n                        <th>\r\n                            평균 거래량\r\n                        </th>\r\n                        <th>\r\n                            거래량/평균거래량\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {getList(data)}                                   \r\n                </tbody>\r\n            </Table>\r\n        </CardBody>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport {DailyVolume};","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Reference\\SetRefCard.js",["502","503"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\Stats\\Stats1\\ThemeCharts.js",["504","505","506","507","508","509","510"],"import React, { useState,useEffect } from \"react\";\nimport {Line} from 'react-chartjs-2'\nimport {Card,CardHeader,CardBody,\n    Table} from 'reactstrap'\n\n\nfunction ThemeChart(props){\n    const [theme,setTheme] = useState({themeName : [],splitName : [], propfit: [],date : []})\n    useEffect(() => {\n        let today = new Date()\n        let year = today.getFullYear(); \n        let mon = String(today.getMonth()+1).length <2 ? \"0\"+String(today.getMonth()+1) : String(today.getMonth()+1)\n        let day = String(today.getDate()).length <2 ? \"0\"+String(today.getDate()) : String(today.getDate())\n        let date = year+\"-\"+mon+\"-\"+\"18\"\n        let tempName=''\n\n        fetch(\"http://localhost:8080/getthemecharinfo\")\n        .then(res => res.json())\n        .then(result => {\n            setTheme({\n                themeName : result.map(value => (value['themename'].toLowerCase())),\n                splitName : result.map(value => (value['splitNames'])),\n                propfit : result.map(value => (value['rate'])),\n                date : result.map(value => value['reg_date'])\n            })\n        })       \n    },[])\n\n    const chart = () => {\n        let temp = ''\n        return(\n            theme['themeName'].map(\n                (val,idx) => {\n                    return(\n                        <div key={val}>a</div>\n                    )\n                }\n            )\n        )\n    }\n\n  \n\n    return(\n        <Card className=\"stats_wrapper\">\n        <CardHeader tag=\"h2\">테마별 상승률</CardHeader>\n        <CardBody>\n            <tbody>\n                {chart()}\n            </tbody>\n        </CardBody>\n    </Card>\n    )\n\n}\n\nexport {ThemeChart}\n\n","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\variables\\charts.js",[],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\News\\NewsAddBtn.js",["511","512","513"],"import React, { useState } from 'react';\r\nimport checkIcon from './iconmonstr-plus-thin-16.png';\r\n\r\nfunction NewsAdd(props) {\r\n\r\n    const [isShow, SetIsShow] = useState(false)\r\n\r\n    const mouseEnterHandler = () => {\r\n        SetIsShow(true)\r\n    }\r\n\r\n    const mouseLeaveHandler = () => {\r\n        SetIsShow(false)\r\n    }\r\n\r\n    return (\r\n        <div onMouseLeave={mouseLeaveHandler}>\r\n            <span onMouseEnter={mouseEnterHandler}><img src={checkIcon} /></span>\r\n            <p className={isShow ? \"newsAddBtn newsShow\" : \"newsAddBtn\"}>\r\n                <a onClick={props.tabAddHandler}>Stock</a>\r\n                <a onClick={props.memoAddHandler}>Memo</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsAdd;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\components\\MemoPlugin\\NewsMemo.js",["514","515"],"import React, { useState } from 'react';\r\n\r\nfunction NewsMemo(props){\r\n\r\n\r\n    const getList = (data) => (\r\n\r\n        data.map((value,idx)=>{\r\n            return(\r\n                <p><a key={value.newstitle} href={value.newslink} target=\"_blank\">{value.newstitle}</a></p>\r\n            )\r\n        })\r\n\r\n    )\r\n\r\n    console.log(props.news)\r\n\r\n    return(\r\n        <div>\r\n        {getList(props.news)}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default NewsMemo;","C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\ThemeRate\\ThemeWrapper.js",["516","517"],"C:\\Users\\gkas1\\Desktop\\gitstock\\project-stock\\src\\views\\ThemeRate\\ThemeRow.js",["518","519"],{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","replacedBy":"523"},{"ruleId":"524","severity":1,"message":"525","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":36},{"ruleId":"524","severity":1,"message":"528","line":7,"column":35,"nodeType":"526","messageId":"527","endLine":7,"endColumn":46},{"ruleId":"524","severity":1,"message":"529","line":3,"column":10,"nodeType":"526","messageId":"527","endLine":3,"endColumn":26},{"ruleId":"524","severity":1,"message":"530","line":5,"column":19,"nodeType":"526","messageId":"527","endLine":5,"endColumn":23},{"ruleId":"524","severity":1,"message":"528","line":5,"column":25,"nodeType":"526","messageId":"527","endLine":5,"endColumn":36},{"ruleId":"524","severity":1,"message":"525","line":1,"column":15,"nodeType":"526","messageId":"527","endLine":1,"endColumn":24},{"ruleId":"524","severity":1,"message":"531","line":29,"column":11,"nodeType":"526","messageId":"527","endLine":29,"endColumn":15},{"ruleId":"524","severity":1,"message":"532","line":30,"column":17,"nodeType":"526","messageId":"527","endLine":30,"endColumn":25},{"ruleId":"524","severity":1,"message":"533","line":33,"column":12,"nodeType":"526","messageId":"527","endLine":33,"endColumn":15},{"ruleId":"524","severity":1,"message":"534","line":33,"column":16,"nodeType":"526","messageId":"527","endLine":33,"endColumn":22},{"ruleId":"524","severity":1,"message":"535","line":36,"column":11,"nodeType":"526","messageId":"527","endLine":36,"endColumn":19},{"ruleId":"536","severity":1,"message":"537","line":104,"column":21,"nodeType":"538","endLine":104,"endColumn":159},{"ruleId":"524","severity":1,"message":"539","line":4,"column":5,"nodeType":"526","messageId":"527","endLine":4,"endColumn":11},{"ruleId":"524","severity":1,"message":"540","line":5,"column":5,"nodeType":"526","messageId":"527","endLine":5,"endColumn":16},{"ruleId":"524","severity":1,"message":"541","line":10,"column":5,"nodeType":"526","messageId":"527","endLine":10,"endColumn":19},{"ruleId":"524","severity":1,"message":"542","line":11,"column":5,"nodeType":"526","messageId":"527","endLine":11,"endColumn":17},{"ruleId":"524","severity":1,"message":"543","line":12,"column":5,"nodeType":"526","messageId":"527","endLine":12,"endColumn":17},{"ruleId":"524","severity":1,"message":"544","line":13,"column":5,"nodeType":"526","messageId":"527","endLine":13,"endColumn":25},{"ruleId":"524","severity":1,"message":"545","line":14,"column":5,"nodeType":"526","messageId":"527","endLine":14,"endColumn":10},{"ruleId":"524","severity":1,"message":"546","line":15,"column":5,"nodeType":"526","messageId":"527","endLine":15,"endColumn":14},{"ruleId":"524","severity":1,"message":"547","line":16,"column":5,"nodeType":"526","messageId":"527","endLine":16,"endColumn":10},{"ruleId":"524","severity":1,"message":"548","line":17,"column":5,"nodeType":"526","messageId":"527","endLine":17,"endColumn":10},{"ruleId":"524","severity":1,"message":"549","line":20,"column":5,"nodeType":"526","messageId":"527","endLine":20,"endColumn":24},{"ruleId":"524","severity":1,"message":"550","line":21,"column":5,"nodeType":"526","messageId":"527","endLine":21,"endColumn":10},{"ruleId":"524","severity":1,"message":"551","line":22,"column":5,"nodeType":"526","messageId":"527","endLine":22,"endColumn":16},{"ruleId":"524","severity":1,"message":"552","line":23,"column":5,"nodeType":"526","messageId":"527","endLine":23,"endColumn":14},{"ruleId":"524","severity":1,"message":"553","line":29,"column":5,"nodeType":"526","messageId":"527","endLine":29,"endColumn":13},{"ruleId":"524","severity":1,"message":"539","line":3,"column":5,"nodeType":"526","messageId":"527","endLine":3,"endColumn":11},{"ruleId":"524","severity":1,"message":"540","line":4,"column":5,"nodeType":"526","messageId":"527","endLine":4,"endColumn":16},{"ruleId":"524","severity":1,"message":"554","line":6,"column":5,"nodeType":"526","messageId":"527","endLine":6,"endColumn":15},{"ruleId":"524","severity":1,"message":"555","line":7,"column":5,"nodeType":"526","messageId":"527","endLine":7,"endColumn":13},{"ruleId":"524","severity":1,"message":"556","line":8,"column":5,"nodeType":"526","messageId":"527","endLine":8,"endColumn":14},{"ruleId":"524","severity":1,"message":"541","line":9,"column":5,"nodeType":"526","messageId":"527","endLine":9,"endColumn":19},{"ruleId":"524","severity":1,"message":"542","line":10,"column":5,"nodeType":"526","messageId":"527","endLine":10,"endColumn":17},{"ruleId":"524","severity":1,"message":"543","line":11,"column":5,"nodeType":"526","messageId":"527","endLine":11,"endColumn":17},{"ruleId":"524","severity":1,"message":"544","line":12,"column":5,"nodeType":"526","messageId":"527","endLine":12,"endColumn":25},{"ruleId":"524","severity":1,"message":"545","line":13,"column":5,"nodeType":"526","messageId":"527","endLine":13,"endColumn":10},{"ruleId":"524","severity":1,"message":"546","line":14,"column":5,"nodeType":"526","messageId":"527","endLine":14,"endColumn":14},{"ruleId":"524","severity":1,"message":"547","line":15,"column":5,"nodeType":"526","messageId":"527","endLine":15,"endColumn":10},{"ruleId":"524","severity":1,"message":"548","line":16,"column":5,"nodeType":"526","messageId":"527","endLine":16,"endColumn":10},{"ruleId":"524","severity":1,"message":"549","line":19,"column":5,"nodeType":"526","messageId":"527","endLine":19,"endColumn":24},{"ruleId":"524","severity":1,"message":"550","line":20,"column":5,"nodeType":"526","messageId":"527","endLine":20,"endColumn":10},{"ruleId":"524","severity":1,"message":"551","line":21,"column":5,"nodeType":"526","messageId":"527","endLine":21,"endColumn":16},{"ruleId":"524","severity":1,"message":"552","line":22,"column":5,"nodeType":"526","messageId":"527","endLine":22,"endColumn":14},{"ruleId":"524","severity":1,"message":"557","line":23,"column":5,"nodeType":"526","messageId":"527","endLine":23,"endColumn":8},{"ruleId":"524","severity":1,"message":"558","line":24,"column":5,"nodeType":"526","messageId":"527","endLine":24,"endColumn":12},{"ruleId":"524","severity":1,"message":"559","line":25,"column":5,"nodeType":"526","messageId":"527","endLine":25,"endColumn":12},{"ruleId":"524","severity":1,"message":"560","line":26,"column":5,"nodeType":"526","messageId":"527","endLine":26,"endColumn":15},{"ruleId":"524","severity":1,"message":"561","line":27,"column":5,"nodeType":"526","messageId":"527","endLine":27,"endColumn":12},{"ruleId":"524","severity":1,"message":"553","line":28,"column":5,"nodeType":"526","messageId":"527","endLine":28,"endColumn":13},{"ruleId":"524","severity":1,"message":"562","line":29,"column":5,"nodeType":"526","messageId":"527","endLine":29,"endColumn":15},{"ruleId":"524","severity":1,"message":"563","line":30,"column":5,"nodeType":"526","messageId":"527","endLine":30,"endColumn":19},{"ruleId":"524","severity":1,"message":"564","line":31,"column":5,"nodeType":"526","messageId":"527","endLine":31,"endColumn":19},{"ruleId":"524","severity":1,"message":"565","line":32,"column":5,"nodeType":"526","messageId":"527","endLine":32,"endColumn":14},{"ruleId":"524","severity":1,"message":"566","line":33,"column":5,"nodeType":"526","messageId":"527","endLine":33,"endColumn":18},{"ruleId":"524","severity":1,"message":"567","line":34,"column":5,"nodeType":"526","messageId":"527","endLine":34,"endColumn":10},{"ruleId":"524","severity":1,"message":"568","line":35,"column":5,"nodeType":"526","messageId":"527","endLine":35,"endColumn":14},{"ruleId":"524","severity":1,"message":"569","line":48,"column":17,"nodeType":"526","messageId":"527","endLine":48,"endColumn":23},{"ruleId":"524","severity":1,"message":"562","line":2,"column":43,"nodeType":"526","messageId":"527","endLine":2,"endColumn":53},{"ruleId":"524","severity":1,"message":"563","line":2,"column":55,"nodeType":"526","messageId":"527","endLine":2,"endColumn":69},{"ruleId":"524","severity":1,"message":"564","line":2,"column":71,"nodeType":"526","messageId":"527","endLine":2,"endColumn":85},{"ruleId":"570","severity":1,"message":"571","line":18,"column":28,"nodeType":"572","messageId":"573","endLine":18,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":16,"column":8,"nodeType":"576","endLine":16,"endColumn":25,"suggestions":"577"},{"ruleId":"578","severity":1,"message":"579","line":21,"column":44,"nodeType":"538","endLine":21,"endColumn":88},{"ruleId":"578","severity":1,"message":"579","line":68,"column":29,"nodeType":"538","endLine":68,"endColumn":72},{"ruleId":"524","severity":1,"message":"580","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":16},{"ruleId":"581","severity":1,"message":"582","line":37,"column":47,"nodeType":"583","messageId":"584","endLine":37,"endColumn":49},{"ruleId":"524","severity":1,"message":"585","line":87,"column":13,"nodeType":"526","messageId":"527","endLine":87,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":105,"column":43,"nodeType":"583","messageId":"584","endLine":105,"endColumn":45},{"ruleId":"524","severity":1,"message":"562","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"524","severity":1,"message":"563","line":2,"column":22,"nodeType":"526","messageId":"527","endLine":2,"endColumn":36},{"ruleId":"524","severity":1,"message":"564","line":2,"column":38,"nodeType":"526","messageId":"527","endLine":2,"endColumn":52},{"ruleId":"578","severity":1,"message":"579","line":65,"column":21,"nodeType":"538","endLine":65,"endColumn":65},{"ruleId":"536","severity":1,"message":"586","line":67,"column":47,"nodeType":"538","endLine":67,"endColumn":69},{"ruleId":"536","severity":1,"message":"586","line":68,"column":50,"nodeType":"538","endLine":68,"endColumn":73},{"ruleId":"524","severity":1,"message":"587","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":16},{"ruleId":"524","severity":1,"message":"588","line":9,"column":12,"nodeType":"526","messageId":"527","endLine":9,"endColumn":16},{"ruleId":"524","severity":1,"message":"589","line":9,"column":17,"nodeType":"526","messageId":"527","endLine":9,"endColumn":24},{"ruleId":"524","severity":1,"message":"590","line":12,"column":9,"nodeType":"526","messageId":"527","endLine":12,"endColumn":12},{"ruleId":"536","severity":1,"message":"586","line":63,"column":7,"nodeType":"538","endLine":63,"endColumn":54},{"ruleId":"536","severity":1,"message":"586","line":94,"column":9,"nodeType":"538","endLine":94,"endColumn":56},{"ruleId":"591","severity":1,"message":"592","line":96,"column":24,"nodeType":"593","messageId":"594","endLine":96,"endColumn":25},{"ruleId":"524","severity":1,"message":"595","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":18},{"ruleId":"524","severity":1,"message":"580","line":1,"column":20,"nodeType":"526","messageId":"527","endLine":1,"endColumn":26},{"ruleId":"524","severity":1,"message":"596","line":1,"column":28,"nodeType":"526","messageId":"527","endLine":1,"endColumn":34},{"ruleId":"524","severity":1,"message":"525","line":2,"column":24,"nodeType":"526","messageId":"527","endLine":2,"endColumn":33},{"ruleId":"524","severity":1,"message":"555","line":3,"column":26,"nodeType":"526","messageId":"527","endLine":3,"endColumn":34},{"ruleId":"524","severity":1,"message":"597","line":4,"column":9,"nodeType":"526","messageId":"527","endLine":4,"endColumn":13},{"ruleId":"524","severity":1,"message":"598","line":4,"column":14,"nodeType":"526","messageId":"527","endLine":4,"endColumn":20},{"ruleId":"524","severity":1,"message":"599","line":21,"column":13,"nodeType":"526","messageId":"527","endLine":21,"endColumn":18},{"ruleId":"536","severity":1,"message":"586","line":38,"column":13,"nodeType":"538","endLine":38,"endColumn":58},{"ruleId":"536","severity":1,"message":"586","line":41,"column":13,"nodeType":"538","endLine":41,"endColumn":60},{"ruleId":"536","severity":1,"message":"586","line":44,"column":13,"nodeType":"538","endLine":44,"endColumn":60},{"ruleId":"536","severity":1,"message":"586","line":47,"column":13,"nodeType":"538","endLine":47,"endColumn":59},{"ruleId":"524","severity":1,"message":"600","line":63,"column":12,"nodeType":"526","messageId":"527","endLine":63,"endColumn":18},{"ruleId":"524","severity":1,"message":"601","line":63,"column":19,"nodeType":"526","messageId":"527","endLine":63,"endColumn":28},{"ruleId":"570","severity":1,"message":"602","line":72,"column":27,"nodeType":"572","messageId":"573","endLine":72,"endColumn":29},{"ruleId":"570","severity":1,"message":"571","line":77,"column":21,"nodeType":"572","messageId":"573","endLine":77,"endColumn":23},{"ruleId":"570","severity":1,"message":"571","line":77,"column":34,"nodeType":"572","messageId":"573","endLine":77,"endColumn":36},{"ruleId":"570","severity":1,"message":"571","line":78,"column":27,"nodeType":"572","messageId":"573","endLine":78,"endColumn":29},{"ruleId":"570","severity":1,"message":"571","line":82,"column":30,"nodeType":"572","messageId":"573","endLine":82,"endColumn":32},{"ruleId":"570","severity":1,"message":"571","line":83,"column":24,"nodeType":"572","messageId":"573","endLine":83,"endColumn":26},{"ruleId":"524","severity":1,"message":"603","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":15},{"ruleId":"524","severity":1,"message":"604","line":7,"column":12,"nodeType":"526","messageId":"527","endLine":7,"endColumn":15},{"ruleId":"524","severity":1,"message":"569","line":7,"column":17,"nodeType":"526","messageId":"527","endLine":7,"endColumn":23},{"ruleId":"570","severity":1,"message":"571","line":80,"column":59,"nodeType":"572","messageId":"573","endLine":80,"endColumn":61},{"ruleId":"570","severity":1,"message":"571","line":81,"column":59,"nodeType":"572","messageId":"573","endLine":81,"endColumn":61},{"ruleId":"570","severity":1,"message":"571","line":82,"column":59,"nodeType":"572","messageId":"573","endLine":82,"endColumn":61},{"ruleId":"524","severity":1,"message":"605","line":5,"column":18,"nodeType":"526","messageId":"527","endLine":5,"endColumn":25},{"ruleId":"578","severity":1,"message":"579","line":13,"column":22,"nodeType":"538","endLine":13,"endColumn":62},{"ruleId":"524","severity":1,"message":"606","line":2,"column":17,"nodeType":"526","messageId":"527","endLine":2,"endColumn":25},{"ruleId":"524","severity":1,"message":"607","line":6,"column":11,"nodeType":"526","messageId":"527","endLine":6,"endColumn":18},{"ruleId":"524","severity":1,"message":"606","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"608","line":3,"column":9,"nodeType":"526","messageId":"527","endLine":3,"endColumn":19},{"ruleId":"574","severity":1,"message":"609","line":15,"column":7,"nodeType":"576","endLine":15,"endColumn":9,"suggestions":"610"},{"ruleId":"524","severity":1,"message":"611","line":4,"column":9,"nodeType":"526","messageId":"527","endLine":4,"endColumn":18},{"ruleId":"524","severity":1,"message":"612","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":42,"column":23,"nodeType":"572","messageId":"573","endLine":42,"endColumn":25},{"ruleId":"570","severity":1,"message":"571","line":42,"column":42,"nodeType":"572","messageId":"573","endLine":42,"endColumn":44},{"ruleId":"524","severity":1,"message":"613","line":46,"column":11,"nodeType":"526","messageId":"527","endLine":46,"endColumn":25},{"ruleId":"524","severity":1,"message":"614","line":2,"column":9,"nodeType":"526","messageId":"527","endLine":2,"endColumn":13},{"ruleId":"524","severity":1,"message":"548","line":4,"column":5,"nodeType":"526","messageId":"527","endLine":4,"endColumn":10},{"ruleId":"524","severity":1,"message":"604","line":13,"column":13,"nodeType":"526","messageId":"527","endLine":13,"endColumn":16},{"ruleId":"524","severity":1,"message":"585","line":14,"column":13,"nodeType":"526","messageId":"527","endLine":14,"endColumn":17},{"ruleId":"615","severity":1,"message":"616","line":14,"column":36,"nodeType":"572","messageId":"617","endLine":14,"endColumn":37},{"ruleId":"524","severity":1,"message":"618","line":15,"column":13,"nodeType":"526","messageId":"527","endLine":15,"endColumn":21},{"ruleId":"524","severity":1,"message":"619","line":30,"column":13,"nodeType":"526","messageId":"527","endLine":30,"endColumn":17},{"ruleId":"520","replacedBy":"620"},{"ruleId":"522","replacedBy":"621"},{"ruleId":"524","severity":1,"message":"528","line":7,"column":35,"nodeType":"526","messageId":"527","endLine":7,"endColumn":46},{"ruleId":"524","severity":1,"message":"525","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":36},{"ruleId":"524","severity":1,"message":"529","line":3,"column":10,"nodeType":"526","messageId":"527","endLine":3,"endColumn":26},{"ruleId":"524","severity":1,"message":"530","line":5,"column":19,"nodeType":"526","messageId":"527","endLine":5,"endColumn":23},{"ruleId":"524","severity":1,"message":"528","line":5,"column":25,"nodeType":"526","messageId":"527","endLine":5,"endColumn":36},{"ruleId":"524","severity":1,"message":"525","line":1,"column":15,"nodeType":"526","messageId":"527","endLine":1,"endColumn":24},{"ruleId":"524","severity":1,"message":"531","line":29,"column":11,"nodeType":"526","messageId":"527","endLine":29,"endColumn":15},{"ruleId":"524","severity":1,"message":"532","line":30,"column":17,"nodeType":"526","messageId":"527","endLine":30,"endColumn":25},{"ruleId":"524","severity":1,"message":"533","line":33,"column":12,"nodeType":"526","messageId":"527","endLine":33,"endColumn":15},{"ruleId":"524","severity":1,"message":"534","line":33,"column":16,"nodeType":"526","messageId":"527","endLine":33,"endColumn":22},{"ruleId":"524","severity":1,"message":"535","line":36,"column":11,"nodeType":"526","messageId":"527","endLine":36,"endColumn":19},{"ruleId":"536","severity":1,"message":"537","line":104,"column":21,"nodeType":"538","endLine":104,"endColumn":159},{"ruleId":"524","severity":1,"message":"611","line":4,"column":9,"nodeType":"526","messageId":"527","endLine":4,"endColumn":18},{"ruleId":"524","severity":1,"message":"612","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":44,"column":23,"nodeType":"572","messageId":"573","endLine":44,"endColumn":25},{"ruleId":"570","severity":1,"message":"571","line":44,"column":42,"nodeType":"572","messageId":"573","endLine":44,"endColumn":44},{"ruleId":"524","severity":1,"message":"613","line":48,"column":11,"nodeType":"526","messageId":"527","endLine":48,"endColumn":25},{"ruleId":"524","severity":1,"message":"588","line":8,"column":12,"nodeType":"526","messageId":"527","endLine":8,"endColumn":16},{"ruleId":"524","severity":1,"message":"589","line":8,"column":17,"nodeType":"526","messageId":"527","endLine":8,"endColumn":24},{"ruleId":"524","severity":1,"message":"590","line":11,"column":9,"nodeType":"526","messageId":"527","endLine":11,"endColumn":12},{"ruleId":"536","severity":1,"message":"586","line":62,"column":7,"nodeType":"538","endLine":62,"endColumn":54},{"ruleId":"536","severity":1,"message":"586","line":93,"column":9,"nodeType":"538","endLine":93,"endColumn":56},{"ruleId":"591","severity":1,"message":"592","line":95,"column":24,"nodeType":"593","messageId":"594","endLine":95,"endColumn":25},{"ruleId":"524","severity":1,"message":"603","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":15},{"ruleId":"524","severity":1,"message":"604","line":7,"column":12,"nodeType":"526","messageId":"527","endLine":7,"endColumn":15},{"ruleId":"524","severity":1,"message":"569","line":7,"column":17,"nodeType":"526","messageId":"527","endLine":7,"endColumn":23},{"ruleId":"524","severity":1,"message":"569","line":18,"column":17,"nodeType":"526","messageId":"527","endLine":18,"endColumn":23},{"ruleId":"524","severity":1,"message":"539","line":4,"column":5,"nodeType":"526","messageId":"527","endLine":4,"endColumn":11},{"ruleId":"524","severity":1,"message":"540","line":5,"column":5,"nodeType":"526","messageId":"527","endLine":5,"endColumn":16},{"ruleId":"524","severity":1,"message":"553","line":17,"column":5,"nodeType":"526","messageId":"527","endLine":17,"endColumn":13},{"ruleId":"570","severity":1,"message":"571","line":80,"column":59,"nodeType":"572","messageId":"573","endLine":80,"endColumn":61},{"ruleId":"570","severity":1,"message":"571","line":81,"column":59,"nodeType":"572","messageId":"573","endLine":81,"endColumn":61},{"ruleId":"570","severity":1,"message":"571","line":82,"column":59,"nodeType":"572","messageId":"573","endLine":82,"endColumn":61},{"ruleId":"524","severity":1,"message":"606","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"608","line":3,"column":9,"nodeType":"526","messageId":"527","endLine":3,"endColumn":19},{"ruleId":"524","severity":1,"message":"595","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":18},{"ruleId":"524","severity":1,"message":"580","line":1,"column":20,"nodeType":"526","messageId":"527","endLine":1,"endColumn":26},{"ruleId":"524","severity":1,"message":"596","line":1,"column":28,"nodeType":"526","messageId":"527","endLine":1,"endColumn":34},{"ruleId":"524","severity":1,"message":"525","line":2,"column":24,"nodeType":"526","messageId":"527","endLine":2,"endColumn":33},{"ruleId":"524","severity":1,"message":"555","line":3,"column":26,"nodeType":"526","messageId":"527","endLine":3,"endColumn":34},{"ruleId":"524","severity":1,"message":"597","line":4,"column":9,"nodeType":"526","messageId":"527","endLine":4,"endColumn":13},{"ruleId":"524","severity":1,"message":"598","line":4,"column":14,"nodeType":"526","messageId":"527","endLine":4,"endColumn":20},{"ruleId":"524","severity":1,"message":"599","line":21,"column":13,"nodeType":"526","messageId":"527","endLine":21,"endColumn":18},{"ruleId":"536","severity":1,"message":"586","line":38,"column":13,"nodeType":"538","endLine":38,"endColumn":58},{"ruleId":"536","severity":1,"message":"586","line":41,"column":13,"nodeType":"538","endLine":41,"endColumn":60},{"ruleId":"536","severity":1,"message":"586","line":44,"column":13,"nodeType":"538","endLine":44,"endColumn":60},{"ruleId":"536","severity":1,"message":"586","line":47,"column":13,"nodeType":"538","endLine":47,"endColumn":59},{"ruleId":"524","severity":1,"message":"600","line":63,"column":12,"nodeType":"526","messageId":"527","endLine":63,"endColumn":18},{"ruleId":"524","severity":1,"message":"601","line":63,"column":19,"nodeType":"526","messageId":"527","endLine":63,"endColumn":28},{"ruleId":"570","severity":1,"message":"602","line":72,"column":27,"nodeType":"572","messageId":"573","endLine":72,"endColumn":29},{"ruleId":"570","severity":1,"message":"571","line":77,"column":21,"nodeType":"572","messageId":"573","endLine":77,"endColumn":23},{"ruleId":"570","severity":1,"message":"571","line":77,"column":34,"nodeType":"572","messageId":"573","endLine":77,"endColumn":36},{"ruleId":"570","severity":1,"message":"571","line":78,"column":27,"nodeType":"572","messageId":"573","endLine":78,"endColumn":29},{"ruleId":"570","severity":1,"message":"571","line":82,"column":30,"nodeType":"572","messageId":"573","endLine":82,"endColumn":32},{"ruleId":"570","severity":1,"message":"571","line":83,"column":24,"nodeType":"572","messageId":"573","endLine":83,"endColumn":26},{"ruleId":"524","severity":1,"message":"562","line":2,"column":43,"nodeType":"526","messageId":"527","endLine":2,"endColumn":53},{"ruleId":"524","severity":1,"message":"563","line":2,"column":55,"nodeType":"526","messageId":"527","endLine":2,"endColumn":69},{"ruleId":"524","severity":1,"message":"564","line":2,"column":71,"nodeType":"526","messageId":"527","endLine":2,"endColumn":85},{"ruleId":"570","severity":1,"message":"571","line":18,"column":28,"nodeType":"572","messageId":"573","endLine":18,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":16,"column":8,"nodeType":"576","endLine":16,"endColumn":25,"suggestions":"622"},{"ruleId":"578","severity":1,"message":"579","line":21,"column":44,"nodeType":"538","endLine":21,"endColumn":88},{"ruleId":"524","severity":1,"message":"562","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"524","severity":1,"message":"563","line":2,"column":22,"nodeType":"526","messageId":"527","endLine":2,"endColumn":36},{"ruleId":"524","severity":1,"message":"564","line":2,"column":38,"nodeType":"526","messageId":"527","endLine":2,"endColumn":52},{"ruleId":"524","severity":1,"message":"623","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":17},{"ruleId":"578","severity":1,"message":"579","line":84,"column":21,"nodeType":"538","endLine":84,"endColumn":65},{"ruleId":"536","severity":1,"message":"586","line":87,"column":50,"nodeType":"538","endLine":87,"endColumn":73},{"ruleId":"578","severity":1,"message":"579","line":68,"column":29,"nodeType":"538","endLine":68,"endColumn":72},{"ruleId":"524","severity":1,"message":"580","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":16},{"ruleId":"581","severity":1,"message":"582","line":37,"column":47,"nodeType":"583","messageId":"584","endLine":37,"endColumn":49},{"ruleId":"581","severity":1,"message":"582","line":105,"column":43,"nodeType":"583","messageId":"584","endLine":105,"endColumn":45},{"ruleId":"524","severity":1,"message":"605","line":5,"column":18,"nodeType":"526","messageId":"527","endLine":5,"endColumn":25},{"ruleId":"578","severity":1,"message":"579","line":13,"column":22,"nodeType":"538","endLine":13,"endColumn":62},{"ruleId":"574","severity":1,"message":"609","line":15,"column":7,"nodeType":"576","endLine":15,"endColumn":9,"suggestions":"624"},{"ruleId":"524","severity":1,"message":"606","line":2,"column":17,"nodeType":"526","messageId":"527","endLine":2,"endColumn":25},{"ruleId":"524","severity":1,"message":"607","line":6,"column":11,"nodeType":"526","messageId":"527","endLine":6,"endColumn":18},{"ruleId":"524","severity":1,"message":"614","line":2,"column":9,"nodeType":"526","messageId":"527","endLine":2,"endColumn":13},{"ruleId":"524","severity":1,"message":"548","line":4,"column":5,"nodeType":"526","messageId":"527","endLine":4,"endColumn":10},{"ruleId":"524","severity":1,"message":"604","line":13,"column":13,"nodeType":"526","messageId":"527","endLine":13,"endColumn":16},{"ruleId":"524","severity":1,"message":"585","line":14,"column":13,"nodeType":"526","messageId":"527","endLine":14,"endColumn":17},{"ruleId":"615","severity":1,"message":"616","line":14,"column":36,"nodeType":"572","messageId":"617","endLine":14,"endColumn":37},{"ruleId":"524","severity":1,"message":"618","line":15,"column":13,"nodeType":"526","messageId":"527","endLine":15,"endColumn":21},{"ruleId":"524","severity":1,"message":"619","line":30,"column":13,"nodeType":"526","messageId":"527","endLine":30,"endColumn":17},{"ruleId":"536","severity":1,"message":"586","line":18,"column":52,"nodeType":"538","endLine":18,"endColumn":75},{"ruleId":"625","severity":1,"message":"626","line":20,"column":17,"nodeType":"538","endLine":20,"endColumn":50},{"ruleId":"625","severity":1,"message":"626","line":21,"column":17,"nodeType":"538","endLine":21,"endColumn":51},{"ruleId":"524","severity":1,"message":"606","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"578","severity":1,"message":"579","line":10,"column":20,"nodeType":"538","endLine":10,"endColumn":83},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":26},{"ruleId":"524","severity":1,"message":"627","line":6,"column":12,"nodeType":"526","messageId":"527","endLine":6,"endColumn":17},{"ruleId":"524","severity":1,"message":"628","line":7,"column":10,"nodeType":"526","messageId":"527","endLine":7,"endColumn":12},{"ruleId":"524","severity":1,"message":"629","line":7,"column":13,"nodeType":"526","messageId":"527","endLine":7,"endColumn":18},"no-native-reassign",["630"],"no-negated-in-lhs",["631"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'backgroundColors' is defined but never used.","'Link' is defined but never used.","'edit' is assigned a value but never used.","'setInput' is assigned a value but never used.","'cnt' is assigned a value but never used.","'setCnt' is assigned a value but never used.","'editList' is assigned a value but never used.","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Table' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'Toast' is defined but never used.","'ToastHeader' is defined but never used.","'ToastBody' is defined but never used.","'CardText' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'setDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.day'. Either include it or remove the dependency array.","ArrayExpression",["632"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'result' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'date' is assigned a value but never used.","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'_default' is defined but never used.","'item' is assigned a value but never used.","'setItem' is assigned a value but never used.","'tmp' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'property' is defined but never used.","'values' is defined but never used.","'Post' is defined but never used.","'Delete' is defined but never used.","'_date' is assigned a value but never used.","'isAble' is assigned a value but never used.","'setIsAble' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Modal' is defined but never used.","'day' is assigned a value but never used.","'setData' is assigned a value but never used.","'useState' is defined but never used.","'getList' is assigned a value but never used.","'ThemeChart' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["633"],"'ThemeMemo' is defined but never used.","'AddNewsBtn' is defined but never used.","'AddNewsHandler' is assigned a value but never used.","'Line' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'tempName' is assigned a value but never used.","'temp' is assigned a value but never used.",["630"],["631"],["634"],"'checkIcon' is defined but never used.",["635"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'theme' is assigned a value but never used.","'to' is assigned a value but never used.","'setTo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"636","fix":"640"},{"desc":"638","fix":"641"},"Update the dependencies array to be: [props.day, props.stockName]",{"range":"642","text":"643"},"Update the dependencies array to be: [data]",{"range":"644","text":"645"},{"range":"646","text":"643"},{"range":"647","text":"645"},[515,532],"[props.day, props.stockName]",[396,398],"[data]",[515,532],[396,398]]